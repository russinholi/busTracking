!SESSION 2014-11-25 21:38:14.921 -----------------------------------------------
eclipse.buildId=4.4.0.I20140606-1215
java.version=1.7.0_51
java.vendor=Oracle Corporation
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=pt_BR

!ENTRY org.eclipse.osgi 4 0 2014-11-25 21:38:15.261
!MESSAGE error loading hook: org.eclipse.equinox.weaving.hooks.WeavingHook
!STACK 0
java.lang.NoClassDefFoundError: org/eclipse/osgi/baseadaptor/HookConfigurator
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:190)
	at org.eclipse.osgi.internal.hookregistry.HookRegistry.loadConfigurators(HookRegistry.java:185)
	at org.eclipse.osgi.internal.hookregistry.HookRegistry.initialize(HookRegistry.java:106)
	at org.eclipse.osgi.internal.framework.EquinoxContainer.<init>(EquinoxContainer.java:73)
	at org.eclipse.osgi.launch.Equinox.<init>(Equinox.java:31)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:297)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:232)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:648)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:603)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1465)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1438)
Caused by: java.lang.ClassNotFoundException: org.eclipse.osgi.baseadaptor.HookConfigurator
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 38 more

!ENTRY org.scala-ide.sdt.core 4 0 2014-11-25 21:38:17.000
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.scala-ide.sdt.core [882]
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.scala-ide.sdt.core [osgi.identity; osgi.identity="org.scala-ide.sdt.core"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"] because it is exposed to package 'javax.xml.bind' from resources org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"] and javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"] via two dependency chains.

Chain 1:
  org.scala-ide.sdt.core [osgi.identity; osgi.identity="org.scala-ide.sdt.core"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (osgi.wiring.bundle=org.eclipse.core.runtime)
     |
    provide: osgi.wiring.bundle: org.eclipse.core.runtime
  org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"]

Chain 2:
  org.scala-ide.sdt.core [osgi.identity; osgi.identity="org.scala-ide.sdt.core"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.scala-ide.sbt.full.library)(&(bundle-version>=0.13.0)(!(bundle-version>=0.14.0))))
     |
    provide: osgi.wiring.bundle; osgi.wiring.bundle="org.scala-ide.sbt.full.library"; bundle-version:Version="0.13.2.v-2_11-20140723-2242"
  org.scala-ide.sbt.full.library [osgi.identity; osgi.identity="org.scala-ide.sbt.full.library"; type="osgi.bundle"; version:Version="0.13.2.v-2_11-20140723-2242"]
    import: (osgi.wiring.package=javax.xml.bind)
     |
    export: osgi.wiring.package: javax.xml.bind
  javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.scala-ide.sdt.debug 4 0 2014-11-25 21:38:17.204
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.scala-ide.sdt.debug [883]
  Unresolved requirement: Require-Bundle: org.scala-ide.equinox-weaving-launcher; bundle-version="[1.1.0,2.0.0)"; resolution:="optional"
  Unresolved requirement: Require-Bundle: org.scala-ide.sdt.core
    -> Bundle-SymbolicName: org.scala-ide.sdt.core; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"
       org.scala-ide.sdt.core [882]
         No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.scala-ide.sdt.debug [osgi.identity; osgi.identity="org.scala-ide.sdt.debug"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"] because it is exposed to package 'javax.xml.bind' from resources org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"] and javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"] via two dependency chains.

Chain 1:
  org.scala-ide.sdt.debug [osgi.identity; osgi.identity="org.scala-ide.sdt.debug"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (osgi.wiring.bundle=org.eclipse.core.runtime)
     |
    provide: osgi.wiring.bundle: org.eclipse.core.runtime
  org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"]

Chain 2:
  org.scala-ide.sdt.debug [osgi.identity; osgi.identity="org.scala-ide.sdt.debug"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.scala-ide.sbt.full.library)(&(bundle-version>=0.13.0)(!(bundle-version>=0.14.0))))
     |
    provide: osgi.wiring.bundle; osgi.wiring.bundle="org.scala-ide.sbt.full.library"; bundle-version:Version="0.13.2.v-2_11-20140723-2242"
  org.scala-ide.sbt.full.library [osgi.identity; osgi.identity="org.scala-ide.sbt.full.library"; type="osgi.bundle"; version:Version="0.13.2.v-2_11-20140723-2242"]
    import: (osgi.wiring.package=javax.xml.bind)
     |
    export: osgi.wiring.package: javax.xml.bind
  javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.scalaide.worksheet 4 0 2014-11-25 21:38:17.667
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.scalaide.worksheet [891]
  Unresolved requirement: Import-Package: scala.tools.eclipse; apply-aspects:="false"
    -> Export-Package: scala.tools.eclipse; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; bundle-symbolic-name="org.scala-ide.sdt.core"; version="0.0.0"
       org.scala-ide.sdt.core [882]
         No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.scala-ide.sdt.core; bundle-version="[3.0.4.v-2_11-201407232043-c46f499,3.0.4.v-2_11-201407232043-c46f499]"
    -> Bundle-SymbolicName: org.scala-ide.sdt.core; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"
  Unresolved requirement: Import-Package: scala.tools.eclipse.semantichighlighting
    -> Export-Package: scala.tools.eclipse.semantichighlighting; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; bundle-symbolic-name="org.scala-ide.sdt.core"; version="0.0.0"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.scalaide.worksheet [osgi.identity; osgi.identity="org.scalaide.worksheet"; type="osgi.bundle"; version:Version="0.2.3.v-2_11-201407232049-4f7988d"; singleton:="true"] because it is exposed to package 'javax.xml.bind' from resources org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"] and javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"] via two dependency chains.

Chain 1:
  org.scalaide.worksheet [osgi.identity; osgi.identity="org.scalaide.worksheet"; type="osgi.bundle"; version:Version="0.2.3.v-2_11-201407232049-4f7988d"; singleton:="true"]
    require: (osgi.wiring.bundle=org.eclipse.core.runtime)
     |
    provide: osgi.wiring.bundle: org.eclipse.core.runtime
  org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"]

Chain 2:
  org.scalaide.worksheet [osgi.identity; osgi.identity="org.scalaide.worksheet"; type="osgi.bundle"; version:Version="0.2.3.v-2_11-201407232049-4f7988d"; singleton:="true"]
    require: (osgi.wiring.bundle=org.scala-ide.sbt.full.library)
     |
    provide: osgi.wiring.bundle; osgi.wiring.bundle="org.scala-ide.sbt.full.library"; bundle-version:Version="0.13.2.v-2_11-20140723-2242"
  org.scala-ide.sbt.full.library [osgi.identity; osgi.identity="org.scala-ide.sbt.full.library"; type="osgi.bundle"; version:Version="0.13.2.v-2_11-20140723-2242"]
    import: (osgi.wiring.package=javax.xml.bind)
     |
    export: osgi.wiring.package: javax.xml.bind
  javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.jface 2 0 2014-11-25 21:38:23.164
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-25 21:38:23.164
!MESSAGE A conflict occurred for ALT+CTRL+P:
Binding(ALT+CTRL+P,
	ParameterizedCommand(Command(org.eclipse.m2e.profiles.ui.commands.selectMavenProfileCommand,Select Maven Profiles,
		,
		Category(org.eclipse.ui.category.window,Window,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@73c4b5a9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+CTRL+P,
	ParameterizedCommand(Command(org.eclipse.team.svn.ui.command.CreatePatchCommand,Create Patch...,
		,
		Category(org.eclipse.team.svn.ui.command.category,SVN,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7d7a6fd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui 4 0 2014-11-25 21:38:36.186
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException: Argument not valid
	at org.eclipse.swt.SWT.error(SWT.java:4422)
	at org.eclipse.swt.SWT.error(SWT.java:4356)
	at org.eclipse.swt.SWT.error(SWT.java:4327)
	at org.eclipse.swt.graphics.Image.init(Image.java:1294)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:200)
	at org.eclipse.mylyn.commons.ui.GradientCanvas.onPaint(GradientCanvas.java:188)
	at org.eclipse.mylyn.commons.ui.GradientCanvas.access$0(GradientCanvas.java:183)
	at org.eclipse.mylyn.commons.ui.GradientCanvas$1.handleEvent(GradientCanvas.java:92)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4486)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1388)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1412)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1397)
	at org.eclipse.swt.widgets.Control.gtk_draw(Control.java:3171)
	at org.eclipse.swt.widgets.Canvas.gtk_draw(Canvas.java:171)
	at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:2088)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:5510)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4700)
	at org.eclipse.swt.internal.gtk.OS._gtk_main_do_event(Native Method)
	at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(OS.java:9074)
	at org.eclipse.swt.widgets.Display.eventProc(Display.java:1253)
	at org.eclipse.swt.internal.gtk.OS._gdk_window_process_updates(Native Method)
	at org.eclipse.swt.internal.gtk.OS.gdk_window_process_updates(OS.java:5955)
	at org.eclipse.swt.widgets.Control.update(Control.java:5455)
	at org.eclipse.swt.widgets.Control.update(Control.java:5446)
	at org.eclipse.jface.layout.AbstractColumnLayout.layoutTableTree(AbstractColumnLayout.java:213)
	at org.eclipse.jface.layout.AbstractColumnLayout.layout(AbstractColumnLayout.java:250)
	at org.eclipse.jface.layout.TreeColumnLayout.layout(TreeColumnLayout.java:76)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1652)
	at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:1438)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:879)
	at org.eclipse.swt.layout.GridLayout.layout(GridLayout.java:693)
	at org.eclipse.swt.layout.GridLayout.layout(GridLayout.java:197)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1652)
	at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:1438)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:879)
	at org.eclipse.swt.layout.GridLayout.layout(GridLayout.java:693)
	at org.eclipse.swt.layout.GridLayout.layout(GridLayout.java:197)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1652)
	at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:1438)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:879)
	at org.eclipse.swt.layout.GridLayout.layout(GridLayout.java:693)
	at org.eclipse.swt.layout.GridLayout.layout(GridLayout.java:197)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1652)
	at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:1438)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:879)
	at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java:204)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1652)
	at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:1438)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:879)
	at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java:219)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1652)
	at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:1438)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:879)
	at org.eclipse.swt.layout.FillLayout.layout(FillLayout.java:204)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1652)
	at org.eclipse.swt.widgets.Composite.setBounds(Composite.java:1438)
	at org.eclipse.swt.widgets.Control.setBounds(Control.java:851)
	at org.eclipse.swt.custom.CTabFolderLayout.layout(CTabFolderLayout.java:116)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1652)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1658)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1658)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1658)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1658)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1658)
	at org.eclipse.swt.widgets.Composite.updateLayout(Composite.java:1658)
	at org.eclipse.swt.widgets.Composite.setLayoutDeferred(Composite.java:1497)
	at org.eclipse.swt.widgets.Display.runDeferredLayouts(Display.java:3855)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3428)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1032)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:148)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:636)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:579)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:135)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:382)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:236)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:648)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:603)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1465)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1438)

!ENTRY org.eclipse.ui 4 0 2014-11-25 21:38:36.228
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable (java.lang.IllegalArgumentException: Argument not valid)
	at org.eclipse.swt.SWT.error(SWT.java:4441)
	at org.eclipse.swt.SWT.error(SWT.java:4356)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:139)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3806)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3444)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1151)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1032)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:148)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:636)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:579)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:135)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:382)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:236)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:648)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:603)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1465)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1438)
Caused by: java.lang.IllegalArgumentException: Argument not valid
	at org.eclipse.swt.SWT.error(SWT.java:4422)
	at org.eclipse.swt.SWT.error(SWT.java:4356)
	at org.eclipse.swt.SWT.error(SWT.java:4327)
	at org.eclipse.swt.graphics.Image.init(Image.java:1294)
	at org.eclipse.swt.graphics.Image.<init>(Image.java:200)
	at org.eclipse.mylyn.commons.ui.GradientCanvas.onPaint(GradientCanvas.java:188)
	at org.eclipse.mylyn.commons.ui.GradientCanvas.access$0(GradientCanvas.java:183)
	at org.eclipse.mylyn.commons.ui.GradientCanvas$1.handleEvent(GradientCanvas.java:92)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4486)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1388)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1412)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1397)
	at org.eclipse.swt.widgets.Control.gtk_draw(Control.java:3171)
	at org.eclipse.swt.widgets.Canvas.gtk_draw(Canvas.java:171)
	at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:2088)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:5510)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4700)
	at org.eclipse.swt.internal.gtk.OS._gtk_main_do_event(Native Method)
	at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(OS.java:9074)
	at org.eclipse.swt.widgets.Display.eventProc(Display.java:1253)
	at org.eclipse.swt.internal.gtk.OS._gdk_window_process_updates(Native Method)
	at org.eclipse.swt.internal.gtk.OS.gdk_window_process_updates(OS.java:5955)
	at org.eclipse.swt.widgets.Control.update(Control.java:5455)
	at org.eclipse.swt.widgets.Control.update(Control.java:5446)
	at org.eclipse.jface.fieldassist.ControlDecoration.update(ControlDecoration.java:1059)
	at org.eclipse.jface.fieldassist.ControlDecoration.setImage(ControlDecoration.java:946)
	at org.eclipse.ui.fieldassist.ContentAssistCommandAdapter.<init>(ContentAssistCommandAdapter.java:190)
	at org.eclipse.mylyn.internal.tasks.index.ui.IndexSearchHandler.adaptTextSearchControlInternal(IndexSearchHandler.java:94)
	at org.eclipse.mylyn.internal.tasks.index.ui.IndexSearchHandler.access$2(IndexSearchHandler.java:92)
	at org.eclipse.mylyn.internal.tasks.index.ui.IndexSearchHandler$2.run(IndexSearchHandler.java:86)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:136)
	... 24 more

!ENTRY org.eclipse.m2e.logback.appender 2 0 2014-11-25 21:45:35.883
!MESSAGE The POM for com.ubiqua:com.ubiqua:jar:1.0-SNAPSHOT is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2014-11-25 21:45:37.964
!MESSAGE The POM for com.ubiqua:com.ubiqua:jar:1.0-SNAPSHOT is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2014-11-25 22:09:43.960
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2014-11-25 22:09:44.916
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2014-11-25 22:09:45.717
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2014-11-25 22:09:46.821
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2014-11-25 22:09:47.913
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2014-11-25 22:09:48.850
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2014-11-25 22:09:49.931
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2014-11-25 22:09:50.982
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2014-11-25 22:09:51.935
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2014-11-25 22:09:52.949
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2014-11-25 22:09:54.086
!MESSAGE Failed to dispatch repository event to org.eclipse.m2e.core.internal.embedder.EclipseRepositoryListener: null

!ENTRY org.eclipse.m2e.logback.appender 2 0 2014-11-25 22:09:54.591
!MESSAGE The POM for com.ubiqua:com.ubiqua:jar:1.0-SNAPSHOT is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2014-11-25 22:09:55.385
!MESSAGE The POM for com.ubiqua:com.ubiqua:jar:1.0-SNAPSHOT is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2014-11-25 22:09:58.282
!MESSAGE The POM for com.ubiqua:com.ubiqua:jar:1.0-SNAPSHOT is missing, no dependency information available

!ENTRY org.eclipse.m2e.logback.appender 2 0 2014-11-25 22:10:01.579
!MESSAGE The POM for com.ubiqua:com.ubiqua:jar:1.0-SNAPSHOT is missing, no dependency information available

!ENTRY org.eclipse.jface 2 0 2014-11-25 23:22:49.053
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-25 23:22:49.053
!MESSAGE A conflict occurred for CTRL+I:
Binding(CTRL+I,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.indent,Correct Indentation,
		Corrects the indentation of the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@34f23842,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+I,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.format.active.elements,Format Active Elements,
		Format active elements,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@28ba5be1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-25 23:22:49.053
!MESSAGE A conflict occurred for CTRL+SHIFT+F:
Binding(CTRL+SHIFT+F,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.format,Format,
		Format the selected text,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a4b9036,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+SHIFT+F,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.format.document,Format,
		Format selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@750395f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-25 23:22:49.053
!MESSAGE A conflict occurred for ALT+SHIFT+ARROW_UP:
Binding(ALT+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.enclosing,Select Enclosing Element,
		Expand selection to include enclosing element,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@66e8ce81,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(ALT+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.enclosing,Select Enclosing Element,
		Expand selection to include enclosing element,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6d49bc61,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-25 23:22:49.053
!MESSAGE A conflict occurred for CTRL+SHIFT+/:
Binding(CTRL+SHIFT+/,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.add.block.comment,Add Block Comment,
		Enclose the selection with a block comment,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3e4dabef,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+SHIFT+/,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.add.block.comment,Add Block Comment,
		Add Block Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@55a8d188,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-25 23:22:49.054
!MESSAGE A conflict occurred for CTRL+O:
Binding(CTRL+O,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.show.outline,Quick Outline,
		Show the quick outline for the editor input,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5d52f7dd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+O,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.quick_outline,Quick Outline,
		Show the quick outline for the editor input,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@720efe08,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-25 23:22:49.054
!MESSAGE A conflict occurred for CTRL+SHIFT+P:
Binding(CTRL+SHIFT+P,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.goto.matching.bracket,Go to Matching Bracket,
		Moves the cursor to the matching bracket,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3647f9b8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+SHIFT+P,
	ParameterizedCommand(Command(org.eclipse.m2e.core.ui.command.addPlugin,Add Maven Plugin,
		Add Maven Plugin,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2f5bbadf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.core.runtime.xml,,,system)
Binding(CTRL+SHIFT+P,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.goto.matching.bracket,Matching Character,
		Go to Matching Character,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3800e6ee,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-25 23:22:49.054
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_UP:
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.goto.previous.member,Go to Previous Member,
		Move the caret to the previous member of the compilation unit,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2f499ec3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.wst.xml.ui.previousSibling,Previous Sibling,
		Go to Previous Sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2ed14f80,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-25 23:22:49.054
!MESSAGE A conflict occurred for ALT+SHIFT+ARROW_DOWN:
Binding(ALT+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.last,Restore Last Selection,
		Restore last selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a562c76,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(ALT+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.last,Restore Last Selection,
		Restore last selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@13f78e99,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-25 23:22:49.054
!MESSAGE A conflict occurred for CTRL+SHIFT+C:
Binding(CTRL+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.toggle.comment,Toggle Comment,
		Toggle comment the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1f80fc47,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.toggle.comment,Toggle Comment,
		Toggle Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@772bea81,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-25 23:22:49.054
!MESSAGE A conflict occurred for ALT+SHIFT+ARROW_RIGHT:
Binding(ALT+SHIFT+ARROW_RIGHT,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.next,Select Next Element,
		Expand selection to include next sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4d32a979,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(ALT+SHIFT+ARROW_RIGHT,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.next,Select Next Element,
		Expand selection to include next sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@15a9c10f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-25 23:22:49.054
!MESSAGE A conflict occurred for CTRL+SHIFT+\:
Binding(CTRL+SHIFT+\,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.remove.block.comment,Remove Block Comment,
		Remove the block comment enclosing the selection,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@39146e87,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+SHIFT+\,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.remove.block.comment,Remove Block Comment,
		Remove Block Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@51bfa416,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-25 23:22:49.054
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_DOWN:
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.goto.next.member,Go to Next Member,
		Move the caret to the next member of the compilation unit,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c647e57,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.wst.xml.ui.nextSibling,Next Sibling,
		Go to Next Sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6b394ccb,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-25 23:22:49.054
!MESSAGE A conflict occurred for ALT+SHIFT+ARROW_LEFT:
Binding(ALT+SHIFT+ARROW_LEFT,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.previous,Select Previous Element,
		Expand selection to include previous sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@39a2b959,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(ALT+SHIFT+ARROW_LEFT,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.previous,Select Previous Element,
		Expand selection to include previous sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@ff96134,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SESSION 2014-11-29 09:02:02.288 -----------------------------------------------
eclipse.buildId=4.4.0.I20140606-1215
java.version=1.7.0_51
java.vendor=Oracle Corporation
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=pt_BR

!ENTRY org.eclipse.osgi 4 0 2014-11-29 09:02:03.749
!MESSAGE error loading hook: org.eclipse.equinox.weaving.hooks.WeavingHook
!STACK 0
java.lang.NoClassDefFoundError: org/eclipse/osgi/baseadaptor/HookConfigurator
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:190)
	at org.eclipse.osgi.internal.hookregistry.HookRegistry.loadConfigurators(HookRegistry.java:185)
	at org.eclipse.osgi.internal.hookregistry.HookRegistry.initialize(HookRegistry.java:106)
	at org.eclipse.osgi.internal.framework.EquinoxContainer.<init>(EquinoxContainer.java:73)
	at org.eclipse.osgi.launch.Equinox.<init>(Equinox.java:31)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:297)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:232)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:648)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:603)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1465)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1438)
Caused by: java.lang.ClassNotFoundException: org.eclipse.osgi.baseadaptor.HookConfigurator
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 38 more

!ENTRY org.scala-ide.sdt.core 4 0 2014-11-29 09:02:08.139
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.scala-ide.sdt.core [882]
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.scala-ide.sdt.core [osgi.identity; osgi.identity="org.scala-ide.sdt.core"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"] because it is exposed to package 'javax.xml.bind' from resources org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"] and javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"] via two dependency chains.

Chain 1:
  org.scala-ide.sdt.core [osgi.identity; osgi.identity="org.scala-ide.sdt.core"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (osgi.wiring.bundle=org.eclipse.core.runtime)
     |
    provide: osgi.wiring.bundle: org.eclipse.core.runtime
  org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"]

Chain 2:
  org.scala-ide.sdt.core [osgi.identity; osgi.identity="org.scala-ide.sdt.core"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.scala-ide.sbt.full.library)(&(bundle-version>=0.13.0)(!(bundle-version>=0.14.0))))
     |
    provide: osgi.wiring.bundle; osgi.wiring.bundle="org.scala-ide.sbt.full.library"; bundle-version:Version="0.13.2.v-2_11-20140723-2242"
  org.scala-ide.sbt.full.library [osgi.identity; osgi.identity="org.scala-ide.sbt.full.library"; type="osgi.bundle"; version:Version="0.13.2.v-2_11-20140723-2242"]
    import: (osgi.wiring.package=javax.xml.bind)
     |
    export: osgi.wiring.package: javax.xml.bind
  javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.scala-ide.sdt.debug 4 0 2014-11-29 09:02:08.324
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.scala-ide.sdt.debug [883]
  Unresolved requirement: Require-Bundle: org.scala-ide.equinox-weaving-launcher; bundle-version="[1.1.0,2.0.0)"; resolution:="optional"
  Unresolved requirement: Require-Bundle: org.scala-ide.sdt.core
    -> Bundle-SymbolicName: org.scala-ide.sdt.core; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"
       org.scala-ide.sdt.core [882]
         No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.scala-ide.sdt.debug [osgi.identity; osgi.identity="org.scala-ide.sdt.debug"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"] because it is exposed to package 'javax.xml.bind' from resources org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"] and javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"] via two dependency chains.

Chain 1:
  org.scala-ide.sdt.debug [osgi.identity; osgi.identity="org.scala-ide.sdt.debug"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (osgi.wiring.bundle=org.eclipse.core.runtime)
     |
    provide: osgi.wiring.bundle: org.eclipse.core.runtime
  org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"]

Chain 2:
  org.scala-ide.sdt.debug [osgi.identity; osgi.identity="org.scala-ide.sdt.debug"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.scala-ide.sbt.full.library)(&(bundle-version>=0.13.0)(!(bundle-version>=0.14.0))))
     |
    provide: osgi.wiring.bundle; osgi.wiring.bundle="org.scala-ide.sbt.full.library"; bundle-version:Version="0.13.2.v-2_11-20140723-2242"
  org.scala-ide.sbt.full.library [osgi.identity; osgi.identity="org.scala-ide.sbt.full.library"; type="osgi.bundle"; version:Version="0.13.2.v-2_11-20140723-2242"]
    import: (osgi.wiring.package=javax.xml.bind)
     |
    export: osgi.wiring.package: javax.xml.bind
  javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.scalaide.worksheet 4 0 2014-11-29 09:02:08.668
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.scalaide.worksheet [891]
  Unresolved requirement: Import-Package: scala.tools.eclipse; apply-aspects:="false"
    -> Export-Package: scala.tools.eclipse; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; bundle-symbolic-name="org.scala-ide.sdt.core"; version="0.0.0"
       org.scala-ide.sdt.core [882]
         No resolution report for the bundle.  Unresolved requirement: Require-Bundle: org.scala-ide.sdt.core; bundle-version="[3.0.4.v-2_11-201407232043-c46f499,3.0.4.v-2_11-201407232043-c46f499]"
    -> Bundle-SymbolicName: org.scala-ide.sdt.core; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"
  Unresolved requirement: Import-Package: scala.tools.eclipse.semantichighlighting
    -> Export-Package: scala.tools.eclipse.semantichighlighting; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; bundle-symbolic-name="org.scala-ide.sdt.core"; version="0.0.0"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.scalaide.worksheet [osgi.identity; osgi.identity="org.scalaide.worksheet"; type="osgi.bundle"; version:Version="0.2.3.v-2_11-201407232049-4f7988d"; singleton:="true"] because it is exposed to package 'javax.xml.bind' from resources org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"] and javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"] via two dependency chains.

Chain 1:
  org.scalaide.worksheet [osgi.identity; osgi.identity="org.scalaide.worksheet"; type="osgi.bundle"; version:Version="0.2.3.v-2_11-201407232049-4f7988d"; singleton:="true"]
    require: (osgi.wiring.bundle=org.eclipse.core.runtime)
     |
    provide: osgi.wiring.bundle: org.eclipse.core.runtime
  org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"]

Chain 2:
  org.scalaide.worksheet [osgi.identity; osgi.identity="org.scalaide.worksheet"; type="osgi.bundle"; version:Version="0.2.3.v-2_11-201407232049-4f7988d"; singleton:="true"]
    require: (osgi.wiring.bundle=org.scala-ide.sbt.full.library)
     |
    provide: osgi.wiring.bundle; osgi.wiring.bundle="org.scala-ide.sbt.full.library"; bundle-version:Version="0.13.2.v-2_11-20140723-2242"
  org.scala-ide.sbt.full.library [osgi.identity; osgi.identity="org.scala-ide.sbt.full.library"; type="osgi.bundle"; version:Version="0.13.2.v-2_11-20140723-2242"]
    import: (osgi.wiring.package=javax.xml.bind)
     |
    export: osgi.wiring.package: javax.xml.bind
  javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.jface 2 0 2014-11-29 09:05:31.366
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-29 09:05:31.366
!MESSAGE A conflict occurred for ALT+CTRL+P:
Binding(ALT+CTRL+P,
	ParameterizedCommand(Command(org.eclipse.m2e.profiles.ui.commands.selectMavenProfileCommand,Select Maven Profiles,
		,
		Category(org.eclipse.ui.category.window,Window,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@43c911ed,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+CTRL+P,
	ParameterizedCommand(Command(org.eclipse.team.svn.ui.command.CreatePatchCommand,Create Patch...,
		,
		Category(org.eclipse.team.svn.ui.command.category,SVN,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@45b8015f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SESSION 2014-11-29 16:39:47.280 -----------------------------------------------
eclipse.buildId=4.4.0.I20140606-1215
java.version=1.7.0_51
java.vendor=Oracle Corporation
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=pt_BR

!ENTRY org.eclipse.osgi 4 0 2014-11-29 16:39:48.237
!MESSAGE error loading hook: org.eclipse.equinox.weaving.hooks.WeavingHook
!STACK 0
java.lang.NoClassDefFoundError: org/eclipse/osgi/baseadaptor/HookConfigurator
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:190)
	at org.eclipse.osgi.internal.hookregistry.HookRegistry.loadConfigurators(HookRegistry.java:185)
	at org.eclipse.osgi.internal.hookregistry.HookRegistry.initialize(HookRegistry.java:106)
	at org.eclipse.osgi.internal.framework.EquinoxContainer.<init>(EquinoxContainer.java:73)
	at org.eclipse.osgi.launch.Equinox.<init>(Equinox.java:31)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:297)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:232)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:648)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:603)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1465)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1438)
Caused by: java.lang.ClassNotFoundException: org.eclipse.osgi.baseadaptor.HookConfigurator
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 38 more

!ENTRY org.scala-ide.sdt.core 4 0 2014-11-29 16:39:51.531
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.scala-ide.sdt.core [882]
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.scala-ide.sdt.core [osgi.identity; osgi.identity="org.scala-ide.sdt.core"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"] because it is exposed to package 'javax.xml.bind' from resources org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"] and javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"] via two dependency chains.

Chain 1:
  org.scala-ide.sdt.core [osgi.identity; osgi.identity="org.scala-ide.sdt.core"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (osgi.wiring.bundle=org.eclipse.core.runtime)
     |
    provide: osgi.wiring.bundle: org.eclipse.core.runtime
  org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"]

Chain 2:
  org.scala-ide.sdt.core [osgi.identity; osgi.identity="org.scala-ide.sdt.core"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.scala-ide.sbt.full.library)(&(bundle-version>=0.13.0)(!(bundle-version>=0.14.0))))
     |
    provide: osgi.wiring.bundle; osgi.wiring.bundle="org.scala-ide.sbt.full.library"; bundle-version:Version="0.13.2.v-2_11-20140723-2242"
  org.scala-ide.sbt.full.library [osgi.identity; osgi.identity="org.scala-ide.sbt.full.library"; type="osgi.bundle"; version:Version="0.13.2.v-2_11-20140723-2242"]
    import: (osgi.wiring.package=javax.xml.bind)
     |
    export: osgi.wiring.package: javax.xml.bind
  javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.scala-ide.sdt.debug 4 0 2014-11-29 16:39:51.719
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.scala-ide.sdt.debug [883]
  Unresolved requirement: Require-Bundle: org.scala-ide.equinox-weaving-launcher; bundle-version="[1.1.0,2.0.0)"; resolution:="optional"
  Unresolved requirement: Require-Bundle: org.scala-ide.sdt.core
    -> Bundle-SymbolicName: org.scala-ide.sdt.core; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"
       org.scala-ide.sdt.core [882]
         No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.scala-ide.sdt.debug [osgi.identity; osgi.identity="org.scala-ide.sdt.debug"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"] because it is exposed to package 'javax.xml.bind' from resources org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"] and javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"] via two dependency chains.

Chain 1:
  org.scala-ide.sdt.debug [osgi.identity; osgi.identity="org.scala-ide.sdt.debug"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (osgi.wiring.bundle=org.eclipse.core.runtime)
     |
    provide: osgi.wiring.bundle: org.eclipse.core.runtime
  org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"]

Chain 2:
  org.scala-ide.sdt.debug [osgi.identity; osgi.identity="org.scala-ide.sdt.debug"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.scala-ide.sbt.full.library)(&(bundle-version>=0.13.0)(!(bundle-version>=0.14.0))))
     |
    provide: osgi.wiring.bundle; osgi.wiring.bundle="org.scala-ide.sbt.full.library"; bundle-version:Version="0.13.2.v-2_11-20140723-2242"
  org.scala-ide.sbt.full.library [osgi.identity; osgi.identity="org.scala-ide.sbt.full.library"; type="osgi.bundle"; version:Version="0.13.2.v-2_11-20140723-2242"]
    import: (osgi.wiring.package=javax.xml.bind)
     |
    export: osgi.wiring.package: javax.xml.bind
  javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.scalaide.worksheet 4 0 2014-11-29 16:39:52.060
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.scalaide.worksheet [891]
  Unresolved requirement: Require-Bundle: org.scala-ide.sdt.core; bundle-version="[3.0.4.v-2_11-201407232043-c46f499,3.0.4.v-2_11-201407232043-c46f499]"
    -> Bundle-SymbolicName: org.scala-ide.sdt.core; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"
       org.scala-ide.sdt.core [882]
         No resolution report for the bundle.  Unresolved requirement: Import-Package: scala.tools.eclipse.semantichighlighting
    -> Export-Package: scala.tools.eclipse.semantichighlighting; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; bundle-symbolic-name="org.scala-ide.sdt.core"; version="0.0.0"
  Unresolved requirement: Import-Package: scala.tools.eclipse; apply-aspects:="false"
    -> Export-Package: scala.tools.eclipse; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; bundle-symbolic-name="org.scala-ide.sdt.core"; version="0.0.0"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.scalaide.worksheet [osgi.identity; osgi.identity="org.scalaide.worksheet"; type="osgi.bundle"; version:Version="0.2.3.v-2_11-201407232049-4f7988d"; singleton:="true"] because it is exposed to package 'javax.xml.bind' from resources org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"] and javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"] via two dependency chains.

Chain 1:
  org.scalaide.worksheet [osgi.identity; osgi.identity="org.scalaide.worksheet"; type="osgi.bundle"; version:Version="0.2.3.v-2_11-201407232049-4f7988d"; singleton:="true"]
    require: (osgi.wiring.bundle=org.eclipse.core.runtime)
     |
    provide: osgi.wiring.bundle: org.eclipse.core.runtime
  org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"]

Chain 2:
  org.scalaide.worksheet [osgi.identity; osgi.identity="org.scalaide.worksheet"; type="osgi.bundle"; version:Version="0.2.3.v-2_11-201407232049-4f7988d"; singleton:="true"]
    require: (osgi.wiring.bundle=org.scala-ide.sbt.full.library)
     |
    provide: osgi.wiring.bundle; osgi.wiring.bundle="org.scala-ide.sbt.full.library"; bundle-version:Version="0.13.2.v-2_11-20140723-2242"
  org.scala-ide.sbt.full.library [osgi.identity; osgi.identity="org.scala-ide.sbt.full.library"; type="osgi.bundle"; version:Version="0.13.2.v-2_11-20140723-2242"]
    import: (osgi.wiring.package=javax.xml.bind)
     |
    export: osgi.wiring.package: javax.xml.bind
  javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.jface 2 0 2014-11-29 16:40:26.627
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-29 16:40:26.627
!MESSAGE A conflict occurred for ALT+CTRL+P:
Binding(ALT+CTRL+P,
	ParameterizedCommand(Command(org.eclipse.m2e.profiles.ui.commands.selectMavenProfileCommand,Select Maven Profiles,
		,
		Category(org.eclipse.ui.category.window,Window,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@68571e57,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+CTRL+P,
	ParameterizedCommand(Command(org.eclipse.team.svn.ui.command.CreatePatchCommand,Create Patch...,
		,
		Category(org.eclipse.team.svn.ui.command.category,SVN,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2f891745,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-29 16:46:38.709
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package core;


import static com.google.common.base.Preconditions.checkNotNull;
import io.dropwizard.jersey.params.IntParam;

import java.net.HttpURLConnection;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;

import javax.validation.Valid;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;

import Response.BusList;
import Response.LinhaList;
import Response.PontoList;
import Response.ResponsePonto;
import Response.ResponsePontoList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Felipe Cousin
 */
@Path("/get")
public class ConfigResource {
    
    private HashMap<Integer, Bus> mapaOnibus = new HashMap<Integer, Bus>(); // chave é o id do onibus, e o onibus
    private HashMap<Integer, Linha> mapaOnibusLinha = new HashMap<Integer, Linha>(); // chave é o id do onibus, e a sua linha
    private HashMap<Integer, Linha> mapaLinha = new HashMap<Integer, Linha>(); // chave é o id da linha, e a linha       
    private HashMap<Integer, ArrayList<Bus>> listaOnibus = new HashMap<Integer, ArrayList<Bus>>(); // chave é id da linha, arraylist de todos onibus na linha
    private HashMap<Integer, ArrayList<Linha>> linhasNoPonto = new HashMap<Integer, ArrayList<Linha>>(); // chave é id do ponto, arraylist de todas as linhas que passam por ele
    //private HashMap<Integer, ArrayList<Bus>> onibusNoPonto = new HashMap<Integer, ArrayList<Bus>>(); // chave é id do ponto, arraylist de todos os pontos que passam por ele
    private HashMap<Integer, ArrayList<ResponsePonto>> responseTodosOnibusNoPonto = new HashMap<Integer, ArrayList<ResponsePonto>>(); // chave é id do ponto, arraylist de todos as respostas de onibus que passam por ele
    private HashMap<Integer, Ponto> listaPontos = new HashMap<Integer, Ponto>();
    private ArrayList<Linha> linhasOrdenadas = new ArrayList<Linha>();
    private HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>> matrizResponsePonto = new HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>>();
    
    public ConfigResource() {
        
    }

    public void adicionarBus(Bus onibus) {
        Linha linha = onibus.pegarLinha();
        mapaOnibus.put(onibus.getId(), onibus);
        mapaOnibusLinha.put(onibus.getId(), linha);
        if(listaOnibus.containsKey(linha.getIdLinha())) listaOnibus.get(linha.getIdLinha()).add(onibus);
        else {
            ArrayList<Bus> list = new ArrayList<Bus>();
            list.add(onibus);
            listaOnibus.put(linha.getIdLinha(), list);
        }
        if(!mapaLinha.containsKey(linha.getIdLinha())) { 
            linhasOrdenadas.add(linha);
            Collections.sort(linhasOrdenadas);
            mapaLinha.put(linha.getIdLinha(), linha);
        }            
    }
    
    public void adicionarPonto(Ponto ponto) {
        if(!listaPontos.containsKey(ponto.getId()) && ponto.isPontoDeOnibus()) listaPontos.put(ponto.getId(), ponto);        
    }
    
    public void configurarPontos() {
        Iterator<Ponto> iteradorPontos = listaPontos.values().iterator();
        Date inicio = Calendar.getInstance().getTime();
        while(iteradorPontos.hasNext()) {            
            Ponto ponto = (Ponto) iteradorPontos.next();
            Iterator<Linha> iteradorLinhas = mapaLinha.values().iterator();
            ArrayList<Linha> listaLinhas = new ArrayList<Linha>();
            ArrayList<Bus> listaBuses = new ArrayList<Bus>();
            ArrayList<ResponsePonto> listaResponse = new ArrayList<ResponsePonto>();
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = new HashMap<Integer, ArrayList<ResponsePonto>>();            

            while(iteradorLinhas.hasNext()) {
                Linha linha = iteradorLinhas.next();
                ArrayList<ResponsePonto> listaMatriz = new ArrayList<ResponsePonto>();
                if(linha.pontoOnibusEstaNaLinha(ponto)) {
                    listaLinhas.add(linha);
                    Iterator<Bus> iteradorOnibus = listaOnibus.get(linha.getIdLinha()).iterator();
                    while(iteradorOnibus.hasNext()) {
                        Bus b = iteradorOnibus.next();
                        listaBuses.add(b);
                        ResponsePonto resp = new ResponsePonto(ponto, linha, b);
                        listaResponse.add(resp);
                        listaMatriz.add(resp);
                    }
                    Collections.sort(listaMatriz);
                    mapa.put(linha.getIdLinha(), listaMatriz);
                }
            }
            
            linhasNoPonto.put(ponto.getId(), listaLinhas);
            //onibusNoPonto.put(ponto.getId(), listaBuses);
            responseTodosOnibusNoPonto.put(ponto.getId(), listaResponse);
            matrizResponsePonto.put(ponto.getId(), mapa);
            
        }
        
        Date termino = Calendar.getInstance().getTime();
        System.out.println("tempo = "+(termino.getTime() - inicio.getTime()));
        
    }
    
    private void alterarLinhaOnibus(Bus bus, Linha nova) {
        Linha anterior = bus.pegarLinha();
        System.out.println("anterior = "+anterior.getIdLinha()+", nova = "+nova.getIdLinha());
        if(anterior.getIdLinha() != nova.getIdLinha()) {
            linhasNoPonto.clear();
            responseTodosOnibusNoPonto.clear();
            matrizResponsePonto.clear();
            mapaOnibusLinha.put(bus.getId(), nova);
            listaOnibus.get(anterior.getIdLinha()).remove(bus);
            listaOnibus.get(nova.getIdLinha()).add(bus);
            bus.setLinha(nova);
            System.out.println("ta aqui1");
            configurarPontos();
            System.out.println("ta aqui5");
        }        
    }
    
    public void atualizarTemposSistema() {
        Iterator<Bus> iteradorOnibus = mapaOnibus.values().iterator();
        for (Bus onibus : mapaOnibus.values()) {
            onibus.atualizarCrowdness();
        }
        
        Iterator<HashMap<Integer, ArrayList<ResponsePonto>>> iteradorPontos = matrizResponsePonto.values().iterator();
        
        for (Entry<>(iteradorPontos.hasNext()) {            
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = iteradorPontos.next();
            Iterator<ArrayList<ResponsePonto>> iteradorLinhas = mapa.values().iterator();    

            while(iteradorLinhas.hasNext()) {                
                ArrayList<ResponsePonto> listaMatriz = iteradorLinhas.next();
                Iterator<ResponsePonto> iteradorResponse = listaMatriz.iterator();
                while(iteradorResponse.hasNext()) {
                    ResponsePonto resp = iteradorResponse.next();
                    resp.atualizar();
                }
                Collections.sort(listaMatriz);
            }            
        }
        
        Iterator<ArrayList<ResponsePonto>> iteradorLinhas2 = responseTodosOnibusNoPonto.values().iterator();
        while(iteradorLinhas2.hasNext()) {
            ArrayList<ResponsePonto> lista = iteradorLinhas2.next();
            Collections.sort(lista);
        }
        
        
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/bus/{id}/linha")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Linha getLinhaBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibusLinha.get(id);
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/todas_linhas")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public LinhaList getLinhaBusById()
    {
        return new LinhaList(linhasOrdenadas);
    }
    
    @GET    // retorna o onibus {id}
    @Path("/bus/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Bus getPosicaoBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibus.get(id);
    }
    
    @GET    // retorna todos os onibus na linha {id}
    @Path("/linha/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public BusList getOnibusNaLinha(@PathParam("id") @Valid IntParam id)
    {
        //System.out.println(listaOnibus.toString());    
        if(id.get() == 0) return new BusList(new ArrayList<Bus>(mapaOnibus.values()));
        return new BusList(listaOnibus.get(id.get()));
    }
    
    @GET    
    @Path("/ponto/{idPonto}/linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public ResponsePontoList getOnibusNoPonto(@PathParam("idPonto") @Valid IntParam varIdPonto,
                                              @PathParam("idLinha") @Valid IntParam varIdLinha)
    {
        int idPonto = varIdPonto.get();
        int idLinha = varIdLinha.get();
        Collections.sort(responseTodosOnibusNoPonto.get(idPonto));
        if(idLinha == 0) return new ResponsePontoList(responseTodosOnibusNoPonto.get(idPonto));
        return new ResponsePontoList(matrizResponsePonto.get(idPonto).get(idLinha));
    }
    
    @GET    
    @Path("/crowd/{idBus}/{value}")    
    @Consumes(MediaType.APPLICATION_JSON)
    public void teste(@PathParam("idBus") @Valid IntParam idBus,
            @PathParam("value") @Valid IntParam value) {
        
        int crowd = value.get();
        int idOnibus = idBus.get();
        if(crowd >= 1 && crowd <= 5) {
            if(mapaOnibus.containsKey(idOnibus)) {
                Bus bus = mapaOnibus.get(idOnibus);
                bus.adicionarCrowdness(crowd);
            }
        }

    }
    
//    @GET    
//    @Path("/pontos/{id}")    
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public PontoList getPontosNaLinha(@PathParam("id") @Valid IntParam id)
//    {
//        System.out.println(listaOnibus.toString());
//        ArrayList<Bus> list = new ArrayList<Bus>();
//        System.out.println("\n"+listaOnibus.containsKey(id)+" id = "+id.get()+"\n");
//        if(listaOnibus.containsKey(id.get())) {
//            list = listaOnibus.get(id.get()); 
//            System.out.println(list);
//        }        
//        return new BusList(list);
//    }
    
    @GET    
    @Path("/pontos_linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public PontoList getPontos(@PathParam("idLinha") @Valid IntParam varIdLinha)
    {     
        int idLinha = varIdLinha.get();
        if(idLinha == 0) return new PontoList(new ArrayList<Ponto>(listaPontos.values()));
        return new PontoList(mapaLinha.get(idLinha).pegarPontosNaLinha());
    }
    
    
    @GET
    @Path("/setargps/{id}/{latitude}/{longitude}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setBusPosition(
            @PathParam("id") @Valid IntParam id,
            @PathParam("latitude")  @Valid Double  latitude, 
            @PathParam("longitude")  @Valid Double longitude) {
        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
        try {
            checkNotNull(latitude);
            checkNotNull(longitude);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        mapaOnibus.get(id.get()).setPosicaoAtual(latitude,longitude);
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
    @GET
    @Path("/setarlinha/{idBus}/{idLinha}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setLinhaBus(
            @PathParam("idBus") @Valid IntParam idBus,
            @PathParam("idLinha")  @Valid IntParam  idLinha) {

        try {
            checkNotNull(idBus);
            checkNotNull(idLinha);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        if(mapaLinha.containsKey(idLinha.get())) {
            Linha l = mapaLinha.get(idLinha.get());
            if(mapaOnibus.containsKey(idBus.get())) {
                Bus b = mapaOnibus.get(idBus.get());            
                alterarLinhaOnibus(b, l);
            }
            else {
                Bus b = new Bus(idBus.get(), l);
                adicionarBus(b);
                linhasNoPonto.clear();
                responseTodosOnibusNoPonto.clear();
                matrizResponsePonto.clear();
                configurarPontos();
            }
        }
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
//    @POST
//    @Path("/{id}")
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public Response setBusPositionPost(
//            @PathParam("id") @Valid IntParam id,
//            @FormParam("latitude")  @Valid Double  latitude, 
//            @FormParam("longitude")  @Valid Double longitude) {
//        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
//        try {
//            checkNotNull(latitude);
//            checkNotNull(longitude);
//        } catch(Exception e) {
//            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
//        }      
//        
//        onibus.setPosicaoAtual(latitude,longitude);
//        
//        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();
//       
//    }

    

    
        
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-29 16:46:38.710
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-29 16:46:38.711
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-29 16:46:38.799
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package core;


import static com.google.common.base.Preconditions.checkNotNull;
import io.dropwizard.jersey.params.IntParam;

import java.net.HttpURLConnection;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;

import javax.validation.Valid;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;

import Response.BusList;
import Response.LinhaList;
import Response.PontoList;
import Response.ResponsePonto;
import Response.ResponsePontoList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Felipe Cousin
 */
@Path("/get")
public class ConfigResource {
    
    private HashMap<Integer, Bus> mapaOnibus = new HashMap<Integer, Bus>(); // chave é o id do onibus, e o onibus
    private HashMap<Integer, Linha> mapaOnibusLinha = new HashMap<Integer, Linha>(); // chave é o id do onibus, e a sua linha
    private HashMap<Integer, Linha> mapaLinha = new HashMap<Integer, Linha>(); // chave é o id da linha, e a linha       
    private HashMap<Integer, ArrayList<Bus>> listaOnibus = new HashMap<Integer, ArrayList<Bus>>(); // chave é id da linha, arraylist de todos onibus na linha
    private HashMap<Integer, ArrayList<Linha>> linhasNoPonto = new HashMap<Integer, ArrayList<Linha>>(); // chave é id do ponto, arraylist de todas as linhas que passam por ele
    //private HashMap<Integer, ArrayList<Bus>> onibusNoPonto = new HashMap<Integer, ArrayList<Bus>>(); // chave é id do ponto, arraylist de todos os pontos que passam por ele
    private HashMap<Integer, ArrayList<ResponsePonto>> responseTodosOnibusNoPonto = new HashMap<Integer, ArrayList<ResponsePonto>>(); // chave é id do ponto, arraylist de todos as respostas de onibus que passam por ele
    private HashMap<Integer, Ponto> listaPontos = new HashMap<Integer, Ponto>();
    private ArrayList<Linha> linhasOrdenadas = new ArrayList<Linha>();
    private HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>> matrizResponsePonto = new HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>>();
    
    public ConfigResource() {
        
    }

    public void adicionarBus(Bus onibus) {
        Linha linha = onibus.pegarLinha();
        mapaOnibus.put(onibus.getId(), onibus);
        mapaOnibusLinha.put(onibus.getId(), linha);
        if(listaOnibus.containsKey(linha.getIdLinha())) listaOnibus.get(linha.getIdLinha()).add(onibus);
        else {
            ArrayList<Bus> list = new ArrayList<Bus>();
            list.add(onibus);
            listaOnibus.put(linha.getIdLinha(), list);
        }
        if(!mapaLinha.containsKey(linha.getIdLinha())) { 
            linhasOrdenadas.add(linha);
            Collections.sort(linhasOrdenadas);
            mapaLinha.put(linha.getIdLinha(), linha);
        }            
    }
    
    public void adicionarPonto(Ponto ponto) {
        if(!listaPontos.containsKey(ponto.getId()) && ponto.isPontoDeOnibus()) listaPontos.put(ponto.getId(), ponto);        
    }
    
    public void configurarPontos() {
        Iterator<Ponto> iteradorPontos = listaPontos.values().iterator();
        Date inicio = Calendar.getInstance().getTime();
        while(iteradorPontos.hasNext()) {            
            Ponto ponto = (Ponto) iteradorPontos.next();
            Iterator<Linha> iteradorLinhas = mapaLinha.values().iterator();
            ArrayList<Linha> listaLinhas = new ArrayList<Linha>();
            ArrayList<Bus> listaBuses = new ArrayList<Bus>();
            ArrayList<ResponsePonto> listaResponse = new ArrayList<ResponsePonto>();
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = new HashMap<Integer, ArrayList<ResponsePonto>>();            

            while(iteradorLinhas.hasNext()) {
                Linha linha = iteradorLinhas.next();
                ArrayList<ResponsePonto> listaMatriz = new ArrayList<ResponsePonto>();
                if(linha.pontoOnibusEstaNaLinha(ponto)) {
                    listaLinhas.add(linha);
                    Iterator<Bus> iteradorOnibus = listaOnibus.get(linha.getIdLinha()).iterator();
                    while(iteradorOnibus.hasNext()) {
                        Bus b = iteradorOnibus.next();
                        listaBuses.add(b);
                        ResponsePonto resp = new ResponsePonto(ponto, linha, b);
                        listaResponse.add(resp);
                        listaMatriz.add(resp);
                    }
                    Collections.sort(listaMatriz);
                    mapa.put(linha.getIdLinha(), listaMatriz);
                }
            }
            
            linhasNoPonto.put(ponto.getId(), listaLinhas);
            //onibusNoPonto.put(ponto.getId(), listaBuses);
            responseTodosOnibusNoPonto.put(ponto.getId(), listaResponse);
            matrizResponsePonto.put(ponto.getId(), mapa);
            
        }
        
        Date termino = Calendar.getInstance().getTime();
        System.out.println("tempo = "+(termino.getTime() - inicio.getTime()));
        
    }
    
    private void alterarLinhaOnibus(Bus bus, Linha nova) {
        Linha anterior = bus.pegarLinha();
        System.out.println("anterior = "+anterior.getIdLinha()+", nova = "+nova.getIdLinha());
        if(anterior.getIdLinha() != nova.getIdLinha()) {
            linhasNoPonto.clear();
            responseTodosOnibusNoPonto.clear();
            matrizResponsePonto.clear();
            mapaOnibusLinha.put(bus.getId(), nova);
            listaOnibus.get(anterior.getIdLinha()).remove(bus);
            listaOnibus.get(nova.getIdLinha()).add(bus);
            bus.setLinha(nova);
            System.out.println("ta aqui1");
            configurarPontos();
            System.out.println("ta aqui5");
        }        
    }
    
    public void atualizarTemposSistema() {
        Iterator<Bus> iteradorOnibus = mapaOnibus.values().iterator();
        for (Bus onibus : mapaOnibus.values()) {
            onibus.atualizarCrowdness();
        }
        
        Iterator<HashMap<Integer, ArrayList<ResponsePonto>>> iteradorPontos = matrizResponsePonto.values().iterator();
        
        for (Entry<>(iteradorPontos.hasNext()) {            
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = iteradorPontos.next();
            Iterator<ArrayList<ResponsePonto>> iteradorLinhas = mapa.values().iterator();    

            while(iteradorLinhas.hasNext()) {                
                ArrayList<ResponsePonto> listaMatriz = iteradorLinhas.next();
                Iterator<ResponsePonto> iteradorResponse = listaMatriz.iterator();
                while(iteradorResponse.hasNext()) {
                    ResponsePonto resp = iteradorResponse.next();
                    resp.atualizar();
                }
                Collections.sort(listaMatriz);
            }            
        }
        
        Iterator<ArrayList<ResponsePonto>> iteradorLinhas2 = responseTodosOnibusNoPonto.values().iterator();
        while(iteradorLinhas2.hasNext()) {
            ArrayList<ResponsePonto> lista = iteradorLinhas2.next();
            Collections.sort(lista);
        }
        
        
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/bus/{id}/linha")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Linha getLinhaBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibusLinha.get(id);
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/todas_linhas")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public LinhaList getLinhaBusById()
    {
        return new LinhaList(linhasOrdenadas);
    }
    
    @GET    // retorna o onibus {id}
    @Path("/bus/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Bus getPosicaoBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibus.get(id);
    }
    
    @GET    // retorna todos os onibus na linha {id}
    @Path("/linha/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public BusList getOnibusNaLinha(@PathParam("id") @Valid IntParam id)
    {
        //System.out.println(listaOnibus.toString());    
        if(id.get() == 0) return new BusList(new ArrayList<Bus>(mapaOnibus.values()));
        return new BusList(listaOnibus.get(id.get()));
    }
    
    @GET    
    @Path("/ponto/{idPonto}/linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public ResponsePontoList getOnibusNoPonto(@PathParam("idPonto") @Valid IntParam varIdPonto,
                                              @PathParam("idLinha") @Valid IntParam varIdLinha)
    {
        int idPonto = varIdPonto.get();
        int idLinha = varIdLinha.get();
        Collections.sort(responseTodosOnibusNoPonto.get(idPonto));
        if(idLinha == 0) return new ResponsePontoList(responseTodosOnibusNoPonto.get(idPonto));
        return new ResponsePontoList(matrizResponsePonto.get(idPonto).get(idLinha));
    }
    
    @GET    
    @Path("/crowd/{idBus}/{value}")    
    @Consumes(MediaType.APPLICATION_JSON)
    public void teste(@PathParam("idBus") @Valid IntParam idBus,
            @PathParam("value") @Valid IntParam value) {
        
        int crowd = value.get();
        int idOnibus = idBus.get();
        if(crowd >= 1 && crowd <= 5) {
            if(mapaOnibus.containsKey(idOnibus)) {
                Bus bus = mapaOnibus.get(idOnibus);
                bus.adicionarCrowdness(crowd);
            }
        }

    }
    
//    @GET    
//    @Path("/pontos/{id}")    
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public PontoList getPontosNaLinha(@PathParam("id") @Valid IntParam id)
//    {
//        System.out.println(listaOnibus.toString());
//        ArrayList<Bus> list = new ArrayList<Bus>();
//        System.out.println("\n"+listaOnibus.containsKey(id)+" id = "+id.get()+"\n");
//        if(listaOnibus.containsKey(id.get())) {
//            list = listaOnibus.get(id.get()); 
//            System.out.println(list);
//        }        
//        return new BusList(list);
//    }
    
    @GET    
    @Path("/pontos_linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public PontoList getPontos(@PathParam("idLinha") @Valid IntParam varIdLinha)
    {     
        int idLinha = varIdLinha.get();
        if(idLinha == 0) return new PontoList(new ArrayList<Ponto>(listaPontos.values()));
        return new PontoList(mapaLinha.get(idLinha).pegarPontosNaLinha());
    }
    
    
    @GET
    @Path("/setargps/{id}/{latitude}/{longitude}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setBusPosition(
            @PathParam("id") @Valid IntParam id,
            @PathParam("latitude")  @Valid Double  latitude, 
            @PathParam("longitude")  @Valid Double longitude) {
        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
        try {
            checkNotNull(latitude);
            checkNotNull(longitude);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        mapaOnibus.get(id.get()).setPosicaoAtual(latitude,longitude);
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
    @GET
    @Path("/setarlinha/{idBus}/{idLinha}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setLinhaBus(
            @PathParam("idBus") @Valid IntParam idBus,
            @PathParam("idLinha")  @Valid IntParam  idLinha) {

        try {
            checkNotNull(idBus);
            checkNotNull(idLinha);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        if(mapaLinha.containsKey(idLinha.get())) {
            Linha l = mapaLinha.get(idLinha.get());
            if(mapaOnibus.containsKey(idBus.get())) {
                Bus b = mapaOnibus.get(idBus.get());            
                alterarLinhaOnibus(b, l);
            }
            else {
                Bus b = new Bus(idBus.get(), l);
                adicionarBus(b);
                linhasNoPonto.clear();
                responseTodosOnibusNoPonto.clear();
                matrizResponsePonto.clear();
                configurarPontos();
            }
        }
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
//    @POST
//    @Path("/{id}")
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public Response setBusPositionPost(
//            @PathParam("id") @Valid IntParam id,
//            @FormParam("latitude")  @Valid Double  latitude, 
//            @FormParam("longitude")  @Valid Double longitude) {
//        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
//        try {
//            checkNotNull(latitude);
//            checkNotNull(longitude);
//        } catch(Exception e) {
//            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
//        }      
//        
//        onibus.setPosicaoAtual(latitude,longitude);
//        
//        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();
//       
//    }

    

    
        
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-29 16:46:38.801
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-29 16:46:38.804
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-29 16:46:43.367
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package core;


import static com.google.common.base.Preconditions.checkNotNull;
import io.dropwizard.jersey.params.IntParam;

import java.net.HttpURLConnection;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;

import javax.validation.Valid;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;

import Response.BusList;
import Response.LinhaList;
import Response.PontoList;
import Response.ResponsePonto;
import Response.ResponsePontoList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Felipe Cousin
 */
@Path("/get")
public class ConfigResource {
    
    private HashMap<Integer, Bus> mapaOnibus = new HashMap<Integer, Bus>(); // chave é o id do onibus, e o onibus
    private HashMap<Integer, Linha> mapaOnibusLinha = new HashMap<Integer, Linha>(); // chave é o id do onibus, e a sua linha
    private HashMap<Integer, Linha> mapaLinha = new HashMap<Integer, Linha>(); // chave é o id da linha, e a linha       
    private HashMap<Integer, ArrayList<Bus>> listaOnibus = new HashMap<Integer, ArrayList<Bus>>(); // chave é id da linha, arraylist de todos onibus na linha
    private HashMap<Integer, ArrayList<Linha>> linhasNoPonto = new HashMap<Integer, ArrayList<Linha>>(); // chave é id do ponto, arraylist de todas as linhas que passam por ele
    //private HashMap<Integer, ArrayList<Bus>> onibusNoPonto = new HashMap<Integer, ArrayList<Bus>>(); // chave é id do ponto, arraylist de todos os pontos que passam por ele
    private HashMap<Integer, ArrayList<ResponsePonto>> responseTodosOnibusNoPonto = new HashMap<Integer, ArrayList<ResponsePonto>>(); // chave é id do ponto, arraylist de todos as respostas de onibus que passam por ele
    private HashMap<Integer, Ponto> listaPontos = new HashMap<Integer, Ponto>();
    private ArrayList<Linha> linhasOrdenadas = new ArrayList<Linha>();
    private HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>> matrizResponsePonto = new HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>>();
    
    public ConfigResource() {
        
    }

    public void adicionarBus(Bus onibus) {
        Linha linha = onibus.pegarLinha();
        mapaOnibus.put(onibus.getId(), onibus);
        mapaOnibusLinha.put(onibus.getId(), linha);
        if(listaOnibus.containsKey(linha.getIdLinha())) listaOnibus.get(linha.getIdLinha()).add(onibus);
        else {
            ArrayList<Bus> list = new ArrayList<Bus>();
            list.add(onibus);
            listaOnibus.put(linha.getIdLinha(), list);
        }
        if(!mapaLinha.containsKey(linha.getIdLinha())) { 
            linhasOrdenadas.add(linha);
            Collections.sort(linhasOrdenadas);
            mapaLinha.put(linha.getIdLinha(), linha);
        }            
    }
    
    public void adicionarPonto(Ponto ponto) {
        if(!listaPontos.containsKey(ponto.getId()) && ponto.isPontoDeOnibus()) listaPontos.put(ponto.getId(), ponto);        
    }
    
    public void configurarPontos() {
        Iterator<Ponto> iteradorPontos = listaPontos.values().iterator();
        Date inicio = Calendar.getInstance().getTime();
        while(iteradorPontos.hasNext()) {            
            Ponto ponto = (Ponto) iteradorPontos.next();
            Iterator<Linha> iteradorLinhas = mapaLinha.values().iterator();
            ArrayList<Linha> listaLinhas = new ArrayList<Linha>();
            ArrayList<Bus> listaBuses = new ArrayList<Bus>();
            ArrayList<ResponsePonto> listaResponse = new ArrayList<ResponsePonto>();
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = new HashMap<Integer, ArrayList<ResponsePonto>>();            

            while(iteradorLinhas.hasNext()) {
                Linha linha = iteradorLinhas.next();
                ArrayList<ResponsePonto> listaMatriz = new ArrayList<ResponsePonto>();
                if(linha.pontoOnibusEstaNaLinha(ponto)) {
                    listaLinhas.add(linha);
                    Iterator<Bus> iteradorOnibus = listaOnibus.get(linha.getIdLinha()).iterator();
                    while(iteradorOnibus.hasNext()) {
                        Bus b = iteradorOnibus.next();
                        listaBuses.add(b);
                        ResponsePonto resp = new ResponsePonto(ponto, linha, b);
                        listaResponse.add(resp);
                        listaMatriz.add(resp);
                    }
                    Collections.sort(listaMatriz);
                    mapa.put(linha.getIdLinha(), listaMatriz);
                }
            }
            
            linhasNoPonto.put(ponto.getId(), listaLinhas);
            //onibusNoPonto.put(ponto.getId(), listaBuses);
            responseTodosOnibusNoPonto.put(ponto.getId(), listaResponse);
            matrizResponsePonto.put(ponto.getId(), mapa);
            
        }
        
        Date termino = Calendar.getInstance().getTime();
        System.out.println("tempo = "+(termino.getTime() - inicio.getTime()));
        
    }
    
    private void alterarLinhaOnibus(Bus bus, Linha nova) {
        Linha anterior = bus.pegarLinha();
        System.out.println("anterior = "+anterior.getIdLinha()+", nova = "+nova.getIdLinha());
        if(anterior.getIdLinha() != nova.getIdLinha()) {
            linhasNoPonto.clear();
            responseTodosOnibusNoPonto.clear();
            matrizResponsePonto.clear();
            mapaOnibusLinha.put(bus.getId(), nova);
            listaOnibus.get(anterior.getIdLinha()).remove(bus);
            listaOnibus.get(nova.getIdLinha()).add(bus);
            bus.setLinha(nova);
            System.out.println("ta aqui1");
            configurarPontos();
            System.out.println("ta aqui5");
        }        
    }
    
    public void atualizarTemposSistema() {
        Iterator<Bus> iteradorOnibus = mapaOnibus.values().iterator();
        for (Bus onibus : mapaOnibus.values()) {
            onibus.atualizarCrowdness();
        }
        
        Iterator<HashMap<Integer, ArrayList<ResponsePonto>>> iteradorPontos = matrizResponsePonto.values().iterator();
        
        for (Entry<Integer, Array>(iteradorPontos.hasNext()) {            
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = iteradorPontos.next();
            Iterator<ArrayList<ResponsePonto>> iteradorLinhas = mapa.values().iterator();    

            while(iteradorLinhas.hasNext()) {                
                ArrayList<ResponsePonto> listaMatriz = iteradorLinhas.next();
                Iterator<ResponsePonto> iteradorResponse = listaMatriz.iterator();
                while(iteradorResponse.hasNext()) {
                    ResponsePonto resp = iteradorResponse.next();
                    resp.atualizar();
                }
                Collections.sort(listaMatriz);
            }            
        }
        
        Iterator<ArrayList<ResponsePonto>> iteradorLinhas2 = responseTodosOnibusNoPonto.values().iterator();
        while(iteradorLinhas2.hasNext()) {
            ArrayList<ResponsePonto> lista = iteradorLinhas2.next();
            Collections.sort(lista);
        }
        
        
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/bus/{id}/linha")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Linha getLinhaBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibusLinha.get(id);
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/todas_linhas")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public LinhaList getLinhaBusById()
    {
        return new LinhaList(linhasOrdenadas);
    }
    
    @GET    // retorna o onibus {id}
    @Path("/bus/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Bus getPosicaoBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibus.get(id);
    }
    
    @GET    // retorna todos os onibus na linha {id}
    @Path("/linha/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public BusList getOnibusNaLinha(@PathParam("id") @Valid IntParam id)
    {
        //System.out.println(listaOnibus.toString());    
        if(id.get() == 0) return new BusList(new ArrayList<Bus>(mapaOnibus.values()));
        return new BusList(listaOnibus.get(id.get()));
    }
    
    @GET    
    @Path("/ponto/{idPonto}/linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public ResponsePontoList getOnibusNoPonto(@PathParam("idPonto") @Valid IntParam varIdPonto,
                                              @PathParam("idLinha") @Valid IntParam varIdLinha)
    {
        int idPonto = varIdPonto.get();
        int idLinha = varIdLinha.get();
        Collections.sort(responseTodosOnibusNoPonto.get(idPonto));
        if(idLinha == 0) return new ResponsePontoList(responseTodosOnibusNoPonto.get(idPonto));
        return new ResponsePontoList(matrizResponsePonto.get(idPonto).get(idLinha));
    }
    
    @GET    
    @Path("/crowd/{idBus}/{value}")    
    @Consumes(MediaType.APPLICATION_JSON)
    public void teste(@PathParam("idBus") @Valid IntParam idBus,
            @PathParam("value") @Valid IntParam value) {
        
        int crowd = value.get();
        int idOnibus = idBus.get();
        if(crowd >= 1 && crowd <= 5) {
            if(mapaOnibus.containsKey(idOnibus)) {
                Bus bus = mapaOnibus.get(idOnibus);
                bus.adicionarCrowdness(crowd);
            }
        }

    }
    
//    @GET    
//    @Path("/pontos/{id}")    
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public PontoList getPontosNaLinha(@PathParam("id") @Valid IntParam id)
//    {
//        System.out.println(listaOnibus.toString());
//        ArrayList<Bus> list = new ArrayList<Bus>();
//        System.out.println("\n"+listaOnibus.containsKey(id)+" id = "+id.get()+"\n");
//        if(listaOnibus.containsKey(id.get())) {
//            list = listaOnibus.get(id.get()); 
//            System.out.println(list);
//        }        
//        return new BusList(list);
//    }
    
    @GET    
    @Path("/pontos_linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public PontoList getPontos(@PathParam("idLinha") @Valid IntParam varIdLinha)
    {     
        int idLinha = varIdLinha.get();
        if(idLinha == 0) return new PontoList(new ArrayList<Ponto>(listaPontos.values()));
        return new PontoList(mapaLinha.get(idLinha).pegarPontosNaLinha());
    }
    
    
    @GET
    @Path("/setargps/{id}/{latitude}/{longitude}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setBusPosition(
            @PathParam("id") @Valid IntParam id,
            @PathParam("latitude")  @Valid Double  latitude, 
            @PathParam("longitude")  @Valid Double longitude) {
        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
        try {
            checkNotNull(latitude);
            checkNotNull(longitude);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        mapaOnibus.get(id.get()).setPosicaoAtual(latitude,longitude);
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
    @GET
    @Path("/setarlinha/{idBus}/{idLinha}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setLinhaBus(
            @PathParam("idBus") @Valid IntParam idBus,
            @PathParam("idLinha")  @Valid IntParam  idLinha) {

        try {
            checkNotNull(idBus);
            checkNotNull(idLinha);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        if(mapaLinha.containsKey(idLinha.get())) {
            Linha l = mapaLinha.get(idLinha.get());
            if(mapaOnibus.containsKey(idBus.get())) {
                Bus b = mapaOnibus.get(idBus.get());            
                alterarLinhaOnibus(b, l);
            }
            else {
                Bus b = new Bus(idBus.get(), l);
                adicionarBus(b);
                linhasNoPonto.clear();
                responseTodosOnibusNoPonto.clear();
                matrizResponsePonto.clear();
                configurarPontos();
            }
        }
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
//    @POST
//    @Path("/{id}")
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public Response setBusPositionPost(
//            @PathParam("id") @Valid IntParam id,
//            @FormParam("latitude")  @Valid Double  latitude, 
//            @FormParam("longitude")  @Valid Double longitude) {
//        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
//        try {
//            checkNotNull(latitude);
//            checkNotNull(longitude);
//        } catch(Exception e) {
//            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
//        }      
//        
//        onibus.setPosicaoAtual(latitude,longitude);
//        
//        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();
//       
//    }

    

    
        
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-29 16:46:43.368
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-29 16:46:43.368
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-29 16:46:43.429
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package core;


import static com.google.common.base.Preconditions.checkNotNull;
import io.dropwizard.jersey.params.IntParam;

import java.net.HttpURLConnection;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;

import javax.validation.Valid;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;

import Response.BusList;
import Response.LinhaList;
import Response.PontoList;
import Response.ResponsePonto;
import Response.ResponsePontoList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Felipe Cousin
 */
@Path("/get")
public class ConfigResource {
    
    private HashMap<Integer, Bus> mapaOnibus = new HashMap<Integer, Bus>(); // chave é o id do onibus, e o onibus
    private HashMap<Integer, Linha> mapaOnibusLinha = new HashMap<Integer, Linha>(); // chave é o id do onibus, e a sua linha
    private HashMap<Integer, Linha> mapaLinha = new HashMap<Integer, Linha>(); // chave é o id da linha, e a linha       
    private HashMap<Integer, ArrayList<Bus>> listaOnibus = new HashMap<Integer, ArrayList<Bus>>(); // chave é id da linha, arraylist de todos onibus na linha
    private HashMap<Integer, ArrayList<Linha>> linhasNoPonto = new HashMap<Integer, ArrayList<Linha>>(); // chave é id do ponto, arraylist de todas as linhas que passam por ele
    //private HashMap<Integer, ArrayList<Bus>> onibusNoPonto = new HashMap<Integer, ArrayList<Bus>>(); // chave é id do ponto, arraylist de todos os pontos que passam por ele
    private HashMap<Integer, ArrayList<ResponsePonto>> responseTodosOnibusNoPonto = new HashMap<Integer, ArrayList<ResponsePonto>>(); // chave é id do ponto, arraylist de todos as respostas de onibus que passam por ele
    private HashMap<Integer, Ponto> listaPontos = new HashMap<Integer, Ponto>();
    private ArrayList<Linha> linhasOrdenadas = new ArrayList<Linha>();
    private HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>> matrizResponsePonto = new HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>>();
    
    public ConfigResource() {
        
    }

    public void adicionarBus(Bus onibus) {
        Linha linha = onibus.pegarLinha();
        mapaOnibus.put(onibus.getId(), onibus);
        mapaOnibusLinha.put(onibus.getId(), linha);
        if(listaOnibus.containsKey(linha.getIdLinha())) listaOnibus.get(linha.getIdLinha()).add(onibus);
        else {
            ArrayList<Bus> list = new ArrayList<Bus>();
            list.add(onibus);
            listaOnibus.put(linha.getIdLinha(), list);
        }
        if(!mapaLinha.containsKey(linha.getIdLinha())) { 
            linhasOrdenadas.add(linha);
            Collections.sort(linhasOrdenadas);
            mapaLinha.put(linha.getIdLinha(), linha);
        }            
    }
    
    public void adicionarPonto(Ponto ponto) {
        if(!listaPontos.containsKey(ponto.getId()) && ponto.isPontoDeOnibus()) listaPontos.put(ponto.getId(), ponto);        
    }
    
    public void configurarPontos() {
        Iterator<Ponto> iteradorPontos = listaPontos.values().iterator();
        Date inicio = Calendar.getInstance().getTime();
        while(iteradorPontos.hasNext()) {            
            Ponto ponto = (Ponto) iteradorPontos.next();
            Iterator<Linha> iteradorLinhas = mapaLinha.values().iterator();
            ArrayList<Linha> listaLinhas = new ArrayList<Linha>();
            ArrayList<Bus> listaBuses = new ArrayList<Bus>();
            ArrayList<ResponsePonto> listaResponse = new ArrayList<ResponsePonto>();
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = new HashMap<Integer, ArrayList<ResponsePonto>>();            

            while(iteradorLinhas.hasNext()) {
                Linha linha = iteradorLinhas.next();
                ArrayList<ResponsePonto> listaMatriz = new ArrayList<ResponsePonto>();
                if(linha.pontoOnibusEstaNaLinha(ponto)) {
                    listaLinhas.add(linha);
                    Iterator<Bus> iteradorOnibus = listaOnibus.get(linha.getIdLinha()).iterator();
                    while(iteradorOnibus.hasNext()) {
                        Bus b = iteradorOnibus.next();
                        listaBuses.add(b);
                        ResponsePonto resp = new ResponsePonto(ponto, linha, b);
                        listaResponse.add(resp);
                        listaMatriz.add(resp);
                    }
                    Collections.sort(listaMatriz);
                    mapa.put(linha.getIdLinha(), listaMatriz);
                }
            }
            
            linhasNoPonto.put(ponto.getId(), listaLinhas);
            //onibusNoPonto.put(ponto.getId(), listaBuses);
            responseTodosOnibusNoPonto.put(ponto.getId(), listaResponse);
            matrizResponsePonto.put(ponto.getId(), mapa);
            
        }
        
        Date termino = Calendar.getInstance().getTime();
        System.out.println("tempo = "+(termino.getTime() - inicio.getTime()));
        
    }
    
    private void alterarLinhaOnibus(Bus bus, Linha nova) {
        Linha anterior = bus.pegarLinha();
        System.out.println("anterior = "+anterior.getIdLinha()+", nova = "+nova.getIdLinha());
        if(anterior.getIdLinha() != nova.getIdLinha()) {
            linhasNoPonto.clear();
            responseTodosOnibusNoPonto.clear();
            matrizResponsePonto.clear();
            mapaOnibusLinha.put(bus.getId(), nova);
            listaOnibus.get(anterior.getIdLinha()).remove(bus);
            listaOnibus.get(nova.getIdLinha()).add(bus);
            bus.setLinha(nova);
            System.out.println("ta aqui1");
            configurarPontos();
            System.out.println("ta aqui5");
        }        
    }
    
    public void atualizarTemposSistema() {
        Iterator<Bus> iteradorOnibus = mapaOnibus.values().iterator();
        for (Bus onibus : mapaOnibus.values()) {
            onibus.atualizarCrowdness();
        }
        
        Iterator<HashMap<Integer, ArrayList<ResponsePonto>>> iteradorPontos = matrizResponsePonto.values().iterator();
        
        for (Entry<Integer, Array>(iteradorPontos.hasNext()) {            
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = iteradorPontos.next();
            Iterator<ArrayList<ResponsePonto>> iteradorLinhas = mapa.values().iterator();    

            while(iteradorLinhas.hasNext()) {                
                ArrayList<ResponsePonto> listaMatriz = iteradorLinhas.next();
                Iterator<ResponsePonto> iteradorResponse = listaMatriz.iterator();
                while(iteradorResponse.hasNext()) {
                    ResponsePonto resp = iteradorResponse.next();
                    resp.atualizar();
                }
                Collections.sort(listaMatriz);
            }            
        }
        
        Iterator<ArrayList<ResponsePonto>> iteradorLinhas2 = responseTodosOnibusNoPonto.values().iterator();
        while(iteradorLinhas2.hasNext()) {
            ArrayList<ResponsePonto> lista = iteradorLinhas2.next();
            Collections.sort(lista);
        }
        
        
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/bus/{id}/linha")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Linha getLinhaBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibusLinha.get(id);
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/todas_linhas")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public LinhaList getLinhaBusById()
    {
        return new LinhaList(linhasOrdenadas);
    }
    
    @GET    // retorna o onibus {id}
    @Path("/bus/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Bus getPosicaoBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibus.get(id);
    }
    
    @GET    // retorna todos os onibus na linha {id}
    @Path("/linha/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public BusList getOnibusNaLinha(@PathParam("id") @Valid IntParam id)
    {
        //System.out.println(listaOnibus.toString());    
        if(id.get() == 0) return new BusList(new ArrayList<Bus>(mapaOnibus.values()));
        return new BusList(listaOnibus.get(id.get()));
    }
    
    @GET    
    @Path("/ponto/{idPonto}/linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public ResponsePontoList getOnibusNoPonto(@PathParam("idPonto") @Valid IntParam varIdPonto,
                                              @PathParam("idLinha") @Valid IntParam varIdLinha)
    {
        int idPonto = varIdPonto.get();
        int idLinha = varIdLinha.get();
        Collections.sort(responseTodosOnibusNoPonto.get(idPonto));
        if(idLinha == 0) return new ResponsePontoList(responseTodosOnibusNoPonto.get(idPonto));
        return new ResponsePontoList(matrizResponsePonto.get(idPonto).get(idLinha));
    }
    
    @GET    
    @Path("/crowd/{idBus}/{value}")    
    @Consumes(MediaType.APPLICATION_JSON)
    public void teste(@PathParam("idBus") @Valid IntParam idBus,
            @PathParam("value") @Valid IntParam value) {
        
        int crowd = value.get();
        int idOnibus = idBus.get();
        if(crowd >= 1 && crowd <= 5) {
            if(mapaOnibus.containsKey(idOnibus)) {
                Bus bus = mapaOnibus.get(idOnibus);
                bus.adicionarCrowdness(crowd);
            }
        }

    }
    
//    @GET    
//    @Path("/pontos/{id}")    
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public PontoList getPontosNaLinha(@PathParam("id") @Valid IntParam id)
//    {
//        System.out.println(listaOnibus.toString());
//        ArrayList<Bus> list = new ArrayList<Bus>();
//        System.out.println("\n"+listaOnibus.containsKey(id)+" id = "+id.get()+"\n");
//        if(listaOnibus.containsKey(id.get())) {
//            list = listaOnibus.get(id.get()); 
//            System.out.println(list);
//        }        
//        return new BusList(list);
//    }
    
    @GET    
    @Path("/pontos_linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public PontoList getPontos(@PathParam("idLinha") @Valid IntParam varIdLinha)
    {     
        int idLinha = varIdLinha.get();
        if(idLinha == 0) return new PontoList(new ArrayList<Ponto>(listaPontos.values()));
        return new PontoList(mapaLinha.get(idLinha).pegarPontosNaLinha());
    }
    
    
    @GET
    @Path("/setargps/{id}/{latitude}/{longitude}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setBusPosition(
            @PathParam("id") @Valid IntParam id,
            @PathParam("latitude")  @Valid Double  latitude, 
            @PathParam("longitude")  @Valid Double longitude) {
        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
        try {
            checkNotNull(latitude);
            checkNotNull(longitude);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        mapaOnibus.get(id.get()).setPosicaoAtual(latitude,longitude);
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
    @GET
    @Path("/setarlinha/{idBus}/{idLinha}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setLinhaBus(
            @PathParam("idBus") @Valid IntParam idBus,
            @PathParam("idLinha")  @Valid IntParam  idLinha) {

        try {
            checkNotNull(idBus);
            checkNotNull(idLinha);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        if(mapaLinha.containsKey(idLinha.get())) {
            Linha l = mapaLinha.get(idLinha.get());
            if(mapaOnibus.containsKey(idBus.get())) {
                Bus b = mapaOnibus.get(idBus.get());            
                alterarLinhaOnibus(b, l);
            }
            else {
                Bus b = new Bus(idBus.get(), l);
                adicionarBus(b);
                linhasNoPonto.clear();
                responseTodosOnibusNoPonto.clear();
                matrizResponsePonto.clear();
                configurarPontos();
            }
        }
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
//    @POST
//    @Path("/{id}")
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public Response setBusPositionPost(
//            @PathParam("id") @Valid IntParam id,
//            @FormParam("latitude")  @Valid Double  latitude, 
//            @FormParam("longitude")  @Valid Double longitude) {
//        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
//        try {
//            checkNotNull(latitude);
//            checkNotNull(longitude);
//        } catch(Exception e) {
//            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
//        }      
//        
//        onibus.setPosicaoAtual(latitude,longitude);
//        
//        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();
//       
//    }

    

    
        
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-29 16:46:43.430
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-29 16:46:43.430
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-29 16:46:48.435
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package core;


import static com.google.common.base.Preconditions.checkNotNull;
import io.dropwizard.jersey.params.IntParam;

import java.net.HttpURLConnection;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;

import javax.validation.Valid;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;

import Response.BusList;
import Response.LinhaList;
import Response.PontoList;
import Response.ResponsePonto;
import Response.ResponsePontoList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Felipe Cousin
 */
@Path("/get")
public class ConfigResource {
    
    private HashMap<Integer, Bus> mapaOnibus = new HashMap<Integer, Bus>(); // chave é o id do onibus, e o onibus
    private HashMap<Integer, Linha> mapaOnibusLinha = new HashMap<Integer, Linha>(); // chave é o id do onibus, e a sua linha
    private HashMap<Integer, Linha> mapaLinha = new HashMap<Integer, Linha>(); // chave é o id da linha, e a linha       
    private HashMap<Integer, ArrayList<Bus>> listaOnibus = new HashMap<Integer, ArrayList<Bus>>(); // chave é id da linha, arraylist de todos onibus na linha
    private HashMap<Integer, ArrayList<Linha>> linhasNoPonto = new HashMap<Integer, ArrayList<Linha>>(); // chave é id do ponto, arraylist de todas as linhas que passam por ele
    //private HashMap<Integer, ArrayList<Bus>> onibusNoPonto = new HashMap<Integer, ArrayList<Bus>>(); // chave é id do ponto, arraylist de todos os pontos que passam por ele
    private HashMap<Integer, ArrayList<ResponsePonto>> responseTodosOnibusNoPonto = new HashMap<Integer, ArrayList<ResponsePonto>>(); // chave é id do ponto, arraylist de todos as respostas de onibus que passam por ele
    private HashMap<Integer, Ponto> listaPontos = new HashMap<Integer, Ponto>();
    private ArrayList<Linha> linhasOrdenadas = new ArrayList<Linha>();
    private HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>> matrizResponsePonto = new HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>>();
    
    public ConfigResource() {
        
    }

    public void adicionarBus(Bus onibus) {
        Linha linha = onibus.pegarLinha();
        mapaOnibus.put(onibus.getId(), onibus);
        mapaOnibusLinha.put(onibus.getId(), linha);
        if(listaOnibus.containsKey(linha.getIdLinha())) listaOnibus.get(linha.getIdLinha()).add(onibus);
        else {
            ArrayList<Bus> list = new ArrayList<Bus>();
            list.add(onibus);
            listaOnibus.put(linha.getIdLinha(), list);
        }
        if(!mapaLinha.containsKey(linha.getIdLinha())) { 
            linhasOrdenadas.add(linha);
            Collections.sort(linhasOrdenadas);
            mapaLinha.put(linha.getIdLinha(), linha);
        }            
    }
    
    public void adicionarPonto(Ponto ponto) {
        if(!listaPontos.containsKey(ponto.getId()) && ponto.isPontoDeOnibus()) listaPontos.put(ponto.getId(), ponto);        
    }
    
    public void configurarPontos() {
        Iterator<Ponto> iteradorPontos = listaPontos.values().iterator();
        Date inicio = Calendar.getInstance().getTime();
        while(iteradorPontos.hasNext()) {            
            Ponto ponto = (Ponto) iteradorPontos.next();
            Iterator<Linha> iteradorLinhas = mapaLinha.values().iterator();
            ArrayList<Linha> listaLinhas = new ArrayList<Linha>();
            ArrayList<Bus> listaBuses = new ArrayList<Bus>();
            ArrayList<ResponsePonto> listaResponse = new ArrayList<ResponsePonto>();
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = new HashMap<Integer, ArrayList<ResponsePonto>>();            

            while(iteradorLinhas.hasNext()) {
                Linha linha = iteradorLinhas.next();
                ArrayList<ResponsePonto> listaMatriz = new ArrayList<ResponsePonto>();
                if(linha.pontoOnibusEstaNaLinha(ponto)) {
                    listaLinhas.add(linha);
                    Iterator<Bus> iteradorOnibus = listaOnibus.get(linha.getIdLinha()).iterator();
                    while(iteradorOnibus.hasNext()) {
                        Bus b = iteradorOnibus.next();
                        listaBuses.add(b);
                        ResponsePonto resp = new ResponsePonto(ponto, linha, b);
                        listaResponse.add(resp);
                        listaMatriz.add(resp);
                    }
                    Collections.sort(listaMatriz);
                    mapa.put(linha.getIdLinha(), listaMatriz);
                }
            }
            
            linhasNoPonto.put(ponto.getId(), listaLinhas);
            //onibusNoPonto.put(ponto.getId(), listaBuses);
            responseTodosOnibusNoPonto.put(ponto.getId(), listaResponse);
            matrizResponsePonto.put(ponto.getId(), mapa);
            
        }
        
        Date termino = Calendar.getInstance().getTime();
        System.out.println("tempo = "+(termino.getTime() - inicio.getTime()));
        
    }
    
    private void alterarLinhaOnibus(Bus bus, Linha nova) {
        Linha anterior = bus.pegarLinha();
        System.out.println("anterior = "+anterior.getIdLinha()+", nova = "+nova.getIdLinha());
        if(anterior.getIdLinha() != nova.getIdLinha()) {
            linhasNoPonto.clear();
            responseTodosOnibusNoPonto.clear();
            matrizResponsePonto.clear();
            mapaOnibusLinha.put(bus.getId(), nova);
            listaOnibus.get(anterior.getIdLinha()).remove(bus);
            listaOnibus.get(nova.getIdLinha()).add(bus);
            bus.setLinha(nova);
            System.out.println("ta aqui1");
            configurarPontos();
            System.out.println("ta aqui5");
        }        
    }
    
    public void atualizarTemposSistema() {
        Iterator<Bus> iteradorOnibus = mapaOnibus.values().iterator();
        for (Bus onibus : mapaOnibus.values()) {
            onibus.atualizarCrowdness();
        }
        
        Iterator<HashMap<Integer, ArrayList<ResponsePonto>>> iteradorPontos = matrizResponsePonto.values().iterator();
        
        for (Entry<Integer, ArrayList>(iteradorPontos.hasNext()) {            
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = iteradorPontos.next();
            Iterator<ArrayList<ResponsePonto>> iteradorLinhas = mapa.values().iterator();    

            while(iteradorLinhas.hasNext()) {                
                ArrayList<ResponsePonto> listaMatriz = iteradorLinhas.next();
                Iterator<ResponsePonto> iteradorResponse = listaMatriz.iterator();
                while(iteradorResponse.hasNext()) {
                    ResponsePonto resp = iteradorResponse.next();
                    resp.atualizar();
                }
                Collections.sort(listaMatriz);
            }            
        }
        
        Iterator<ArrayList<ResponsePonto>> iteradorLinhas2 = responseTodosOnibusNoPonto.values().iterator();
        while(iteradorLinhas2.hasNext()) {
            ArrayList<ResponsePonto> lista = iteradorLinhas2.next();
            Collections.sort(lista);
        }
        
        
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/bus/{id}/linha")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Linha getLinhaBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibusLinha.get(id);
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/todas_linhas")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public LinhaList getLinhaBusById()
    {
        return new LinhaList(linhasOrdenadas);
    }
    
    @GET    // retorna o onibus {id}
    @Path("/bus/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Bus getPosicaoBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibus.get(id);
    }
    
    @GET    // retorna todos os onibus na linha {id}
    @Path("/linha/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public BusList getOnibusNaLinha(@PathParam("id") @Valid IntParam id)
    {
        //System.out.println(listaOnibus.toString());    
        if(id.get() == 0) return new BusList(new ArrayList<Bus>(mapaOnibus.values()));
        return new BusList(listaOnibus.get(id.get()));
    }
    
    @GET    
    @Path("/ponto/{idPonto}/linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public ResponsePontoList getOnibusNoPonto(@PathParam("idPonto") @Valid IntParam varIdPonto,
                                              @PathParam("idLinha") @Valid IntParam varIdLinha)
    {
        int idPonto = varIdPonto.get();
        int idLinha = varIdLinha.get();
        Collections.sort(responseTodosOnibusNoPonto.get(idPonto));
        if(idLinha == 0) return new ResponsePontoList(responseTodosOnibusNoPonto.get(idPonto));
        return new ResponsePontoList(matrizResponsePonto.get(idPonto).get(idLinha));
    }
    
    @GET    
    @Path("/crowd/{idBus}/{value}")    
    @Consumes(MediaType.APPLICATION_JSON)
    public void teste(@PathParam("idBus") @Valid IntParam idBus,
            @PathParam("value") @Valid IntParam value) {
        
        int crowd = value.get();
        int idOnibus = idBus.get();
        if(crowd >= 1 && crowd <= 5) {
            if(mapaOnibus.containsKey(idOnibus)) {
                Bus bus = mapaOnibus.get(idOnibus);
                bus.adicionarCrowdness(crowd);
            }
        }

    }
    
//    @GET    
//    @Path("/pontos/{id}")    
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public PontoList getPontosNaLinha(@PathParam("id") @Valid IntParam id)
//    {
//        System.out.println(listaOnibus.toString());
//        ArrayList<Bus> list = new ArrayList<Bus>();
//        System.out.println("\n"+listaOnibus.containsKey(id)+" id = "+id.get()+"\n");
//        if(listaOnibus.containsKey(id.get())) {
//            list = listaOnibus.get(id.get()); 
//            System.out.println(list);
//        }        
//        return new BusList(list);
//    }
    
    @GET    
    @Path("/pontos_linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public PontoList getPontos(@PathParam("idLinha") @Valid IntParam varIdLinha)
    {     
        int idLinha = varIdLinha.get();
        if(idLinha == 0) return new PontoList(new ArrayList<Ponto>(listaPontos.values()));
        return new PontoList(mapaLinha.get(idLinha).pegarPontosNaLinha());
    }
    
    
    @GET
    @Path("/setargps/{id}/{latitude}/{longitude}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setBusPosition(
            @PathParam("id") @Valid IntParam id,
            @PathParam("latitude")  @Valid Double  latitude, 
            @PathParam("longitude")  @Valid Double longitude) {
        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
        try {
            checkNotNull(latitude);
            checkNotNull(longitude);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        mapaOnibus.get(id.get()).setPosicaoAtual(latitude,longitude);
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
    @GET
    @Path("/setarlinha/{idBus}/{idLinha}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setLinhaBus(
            @PathParam("idBus") @Valid IntParam idBus,
            @PathParam("idLinha")  @Valid IntParam  idLinha) {

        try {
            checkNotNull(idBus);
            checkNotNull(idLinha);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        if(mapaLinha.containsKey(idLinha.get())) {
            Linha l = mapaLinha.get(idLinha.get());
            if(mapaOnibus.containsKey(idBus.get())) {
                Bus b = mapaOnibus.get(idBus.get());            
                alterarLinhaOnibus(b, l);
            }
            else {
                Bus b = new Bus(idBus.get(), l);
                adicionarBus(b);
                linhasNoPonto.clear();
                responseTodosOnibusNoPonto.clear();
                matrizResponsePonto.clear();
                configurarPontos();
            }
        }
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
//    @POST
//    @Path("/{id}")
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public Response setBusPositionPost(
//            @PathParam("id") @Valid IntParam id,
//            @FormParam("latitude")  @Valid Double  latitude, 
//            @FormParam("longitude")  @Valid Double longitude) {
//        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
//        try {
//            checkNotNull(latitude);
//            checkNotNull(longitude);
//        } catch(Exception e) {
//            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
//        }      
//        
//        onibus.setPosicaoAtual(latitude,longitude);
//        
//        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();
//       
//    }

    

    
        
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-29 16:46:48.435
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-29 16:46:48.435
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-29 16:46:48.496
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package core;


import static com.google.common.base.Preconditions.checkNotNull;
import io.dropwizard.jersey.params.IntParam;

import java.net.HttpURLConnection;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;

import javax.validation.Valid;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;

import Response.BusList;
import Response.LinhaList;
import Response.PontoList;
import Response.ResponsePonto;
import Response.ResponsePontoList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Felipe Cousin
 */
@Path("/get")
public class ConfigResource {
    
    private HashMap<Integer, Bus> mapaOnibus = new HashMap<Integer, Bus>(); // chave é o id do onibus, e o onibus
    private HashMap<Integer, Linha> mapaOnibusLinha = new HashMap<Integer, Linha>(); // chave é o id do onibus, e a sua linha
    private HashMap<Integer, Linha> mapaLinha = new HashMap<Integer, Linha>(); // chave é o id da linha, e a linha       
    private HashMap<Integer, ArrayList<Bus>> listaOnibus = new HashMap<Integer, ArrayList<Bus>>(); // chave é id da linha, arraylist de todos onibus na linha
    private HashMap<Integer, ArrayList<Linha>> linhasNoPonto = new HashMap<Integer, ArrayList<Linha>>(); // chave é id do ponto, arraylist de todas as linhas que passam por ele
    //private HashMap<Integer, ArrayList<Bus>> onibusNoPonto = new HashMap<Integer, ArrayList<Bus>>(); // chave é id do ponto, arraylist de todos os pontos que passam por ele
    private HashMap<Integer, ArrayList<ResponsePonto>> responseTodosOnibusNoPonto = new HashMap<Integer, ArrayList<ResponsePonto>>(); // chave é id do ponto, arraylist de todos as respostas de onibus que passam por ele
    private HashMap<Integer, Ponto> listaPontos = new HashMap<Integer, Ponto>();
    private ArrayList<Linha> linhasOrdenadas = new ArrayList<Linha>();
    private HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>> matrizResponsePonto = new HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>>();
    
    public ConfigResource() {
        
    }

    public void adicionarBus(Bus onibus) {
        Linha linha = onibus.pegarLinha();
        mapaOnibus.put(onibus.getId(), onibus);
        mapaOnibusLinha.put(onibus.getId(), linha);
        if(listaOnibus.containsKey(linha.getIdLinha())) listaOnibus.get(linha.getIdLinha()).add(onibus);
        else {
            ArrayList<Bus> list = new ArrayList<Bus>();
            list.add(onibus);
            listaOnibus.put(linha.getIdLinha(), list);
        }
        if(!mapaLinha.containsKey(linha.getIdLinha())) { 
            linhasOrdenadas.add(linha);
            Collections.sort(linhasOrdenadas);
            mapaLinha.put(linha.getIdLinha(), linha);
        }            
    }
    
    public void adicionarPonto(Ponto ponto) {
        if(!listaPontos.containsKey(ponto.getId()) && ponto.isPontoDeOnibus()) listaPontos.put(ponto.getId(), ponto);        
    }
    
    public void configurarPontos() {
        Iterator<Ponto> iteradorPontos = listaPontos.values().iterator();
        Date inicio = Calendar.getInstance().getTime();
        while(iteradorPontos.hasNext()) {            
            Ponto ponto = (Ponto) iteradorPontos.next();
            Iterator<Linha> iteradorLinhas = mapaLinha.values().iterator();
            ArrayList<Linha> listaLinhas = new ArrayList<Linha>();
            ArrayList<Bus> listaBuses = new ArrayList<Bus>();
            ArrayList<ResponsePonto> listaResponse = new ArrayList<ResponsePonto>();
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = new HashMap<Integer, ArrayList<ResponsePonto>>();            

            while(iteradorLinhas.hasNext()) {
                Linha linha = iteradorLinhas.next();
                ArrayList<ResponsePonto> listaMatriz = new ArrayList<ResponsePonto>();
                if(linha.pontoOnibusEstaNaLinha(ponto)) {
                    listaLinhas.add(linha);
                    Iterator<Bus> iteradorOnibus = listaOnibus.get(linha.getIdLinha()).iterator();
                    while(iteradorOnibus.hasNext()) {
                        Bus b = iteradorOnibus.next();
                        listaBuses.add(b);
                        ResponsePonto resp = new ResponsePonto(ponto, linha, b);
                        listaResponse.add(resp);
                        listaMatriz.add(resp);
                    }
                    Collections.sort(listaMatriz);
                    mapa.put(linha.getIdLinha(), listaMatriz);
                }
            }
            
            linhasNoPonto.put(ponto.getId(), listaLinhas);
            //onibusNoPonto.put(ponto.getId(), listaBuses);
            responseTodosOnibusNoPonto.put(ponto.getId(), listaResponse);
            matrizResponsePonto.put(ponto.getId(), mapa);
            
        }
        
        Date termino = Calendar.getInstance().getTime();
        System.out.println("tempo = "+(termino.getTime() - inicio.getTime()));
        
    }
    
    private void alterarLinhaOnibus(Bus bus, Linha nova) {
        Linha anterior = bus.pegarLinha();
        System.out.println("anterior = "+anterior.getIdLinha()+", nova = "+nova.getIdLinha());
        if(anterior.getIdLinha() != nova.getIdLinha()) {
            linhasNoPonto.clear();
            responseTodosOnibusNoPonto.clear();
            matrizResponsePonto.clear();
            mapaOnibusLinha.put(bus.getId(), nova);
            listaOnibus.get(anterior.getIdLinha()).remove(bus);
            listaOnibus.get(nova.getIdLinha()).add(bus);
            bus.setLinha(nova);
            System.out.println("ta aqui1");
            configurarPontos();
            System.out.println("ta aqui5");
        }        
    }
    
    public void atualizarTemposSistema() {
        Iterator<Bus> iteradorOnibus = mapaOnibus.values().iterator();
        for (Bus onibus : mapaOnibus.values()) {
            onibus.atualizarCrowdness();
        }
        
        Iterator<HashMap<Integer, ArrayList<ResponsePonto>>> iteradorPontos = matrizResponsePonto.values().iterator();
        
        for (Entry<Integer, ArrayList>(iteradorPontos.hasNext()) {            
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = iteradorPontos.next();
            Iterator<ArrayList<ResponsePonto>> iteradorLinhas = mapa.values().iterator();    

            while(iteradorLinhas.hasNext()) {                
                ArrayList<ResponsePonto> listaMatriz = iteradorLinhas.next();
                Iterator<ResponsePonto> iteradorResponse = listaMatriz.iterator();
                while(iteradorResponse.hasNext()) {
                    ResponsePonto resp = iteradorResponse.next();
                    resp.atualizar();
                }
                Collections.sort(listaMatriz);
            }            
        }
        
        Iterator<ArrayList<ResponsePonto>> iteradorLinhas2 = responseTodosOnibusNoPonto.values().iterator();
        while(iteradorLinhas2.hasNext()) {
            ArrayList<ResponsePonto> lista = iteradorLinhas2.next();
            Collections.sort(lista);
        }
        
        
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/bus/{id}/linha")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Linha getLinhaBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibusLinha.get(id);
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/todas_linhas")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public LinhaList getLinhaBusById()
    {
        return new LinhaList(linhasOrdenadas);
    }
    
    @GET    // retorna o onibus {id}
    @Path("/bus/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Bus getPosicaoBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibus.get(id);
    }
    
    @GET    // retorna todos os onibus na linha {id}
    @Path("/linha/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public BusList getOnibusNaLinha(@PathParam("id") @Valid IntParam id)
    {
        //System.out.println(listaOnibus.toString());    
        if(id.get() == 0) return new BusList(new ArrayList<Bus>(mapaOnibus.values()));
        return new BusList(listaOnibus.get(id.get()));
    }
    
    @GET    
    @Path("/ponto/{idPonto}/linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public ResponsePontoList getOnibusNoPonto(@PathParam("idPonto") @Valid IntParam varIdPonto,
                                              @PathParam("idLinha") @Valid IntParam varIdLinha)
    {
        int idPonto = varIdPonto.get();
        int idLinha = varIdLinha.get();
        Collections.sort(responseTodosOnibusNoPonto.get(idPonto));
        if(idLinha == 0) return new ResponsePontoList(responseTodosOnibusNoPonto.get(idPonto));
        return new ResponsePontoList(matrizResponsePonto.get(idPonto).get(idLinha));
    }
    
    @GET    
    @Path("/crowd/{idBus}/{value}")    
    @Consumes(MediaType.APPLICATION_JSON)
    public void teste(@PathParam("idBus") @Valid IntParam idBus,
            @PathParam("value") @Valid IntParam value) {
        
        int crowd = value.get();
        int idOnibus = idBus.get();
        if(crowd >= 1 && crowd <= 5) {
            if(mapaOnibus.containsKey(idOnibus)) {
                Bus bus = mapaOnibus.get(idOnibus);
                bus.adicionarCrowdness(crowd);
            }
        }

    }
    
//    @GET    
//    @Path("/pontos/{id}")    
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public PontoList getPontosNaLinha(@PathParam("id") @Valid IntParam id)
//    {
//        System.out.println(listaOnibus.toString());
//        ArrayList<Bus> list = new ArrayList<Bus>();
//        System.out.println("\n"+listaOnibus.containsKey(id)+" id = "+id.get()+"\n");
//        if(listaOnibus.containsKey(id.get())) {
//            list = listaOnibus.get(id.get()); 
//            System.out.println(list);
//        }        
//        return new BusList(list);
//    }
    
    @GET    
    @Path("/pontos_linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public PontoList getPontos(@PathParam("idLinha") @Valid IntParam varIdLinha)
    {     
        int idLinha = varIdLinha.get();
        if(idLinha == 0) return new PontoList(new ArrayList<Ponto>(listaPontos.values()));
        return new PontoList(mapaLinha.get(idLinha).pegarPontosNaLinha());
    }
    
    
    @GET
    @Path("/setargps/{id}/{latitude}/{longitude}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setBusPosition(
            @PathParam("id") @Valid IntParam id,
            @PathParam("latitude")  @Valid Double  latitude, 
            @PathParam("longitude")  @Valid Double longitude) {
        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
        try {
            checkNotNull(latitude);
            checkNotNull(longitude);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        mapaOnibus.get(id.get()).setPosicaoAtual(latitude,longitude);
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
    @GET
    @Path("/setarlinha/{idBus}/{idLinha}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setLinhaBus(
            @PathParam("idBus") @Valid IntParam idBus,
            @PathParam("idLinha")  @Valid IntParam  idLinha) {

        try {
            checkNotNull(idBus);
            checkNotNull(idLinha);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        if(mapaLinha.containsKey(idLinha.get())) {
            Linha l = mapaLinha.get(idLinha.get());
            if(mapaOnibus.containsKey(idBus.get())) {
                Bus b = mapaOnibus.get(idBus.get());            
                alterarLinhaOnibus(b, l);
            }
            else {
                Bus b = new Bus(idBus.get(), l);
                adicionarBus(b);
                linhasNoPonto.clear();
                responseTodosOnibusNoPonto.clear();
                matrizResponsePonto.clear();
                configurarPontos();
            }
        }
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
//    @POST
//    @Path("/{id}")
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public Response setBusPositionPost(
//            @PathParam("id") @Valid IntParam id,
//            @FormParam("latitude")  @Valid Double  latitude, 
//            @FormParam("longitude")  @Valid Double longitude) {
//        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
//        try {
//            checkNotNull(latitude);
//            checkNotNull(longitude);
//        } catch(Exception e) {
//            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
//        }      
//        
//        onibus.setPosicaoAtual(latitude,longitude);
//        
//        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();
//       
//    }

    

    
        
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-29 16:46:48.497
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-29 16:46:48.497
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-29 16:46:51.495
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package core;


import static com.google.common.base.Preconditions.checkNotNull;
import io.dropwizard.jersey.params.IntParam;

import java.net.HttpURLConnection;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;

import javax.validation.Valid;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;

import Response.BusList;
import Response.LinhaList;
import Response.PontoList;
import Response.ResponsePonto;
import Response.ResponsePontoList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Felipe Cousin
 */
@Path("/get")
public class ConfigResource {
    
    private HashMap<Integer, Bus> mapaOnibus = new HashMap<Integer, Bus>(); // chave é o id do onibus, e o onibus
    private HashMap<Integer, Linha> mapaOnibusLinha = new HashMap<Integer, Linha>(); // chave é o id do onibus, e a sua linha
    private HashMap<Integer, Linha> mapaLinha = new HashMap<Integer, Linha>(); // chave é o id da linha, e a linha       
    private HashMap<Integer, ArrayList<Bus>> listaOnibus = new HashMap<Integer, ArrayList<Bus>>(); // chave é id da linha, arraylist de todos onibus na linha
    private HashMap<Integer, ArrayList<Linha>> linhasNoPonto = new HashMap<Integer, ArrayList<Linha>>(); // chave é id do ponto, arraylist de todas as linhas que passam por ele
    //private HashMap<Integer, ArrayList<Bus>> onibusNoPonto = new HashMap<Integer, ArrayList<Bus>>(); // chave é id do ponto, arraylist de todos os pontos que passam por ele
    private HashMap<Integer, ArrayList<ResponsePonto>> responseTodosOnibusNoPonto = new HashMap<Integer, ArrayList<ResponsePonto>>(); // chave é id do ponto, arraylist de todos as respostas de onibus que passam por ele
    private HashMap<Integer, Ponto> listaPontos = new HashMap<Integer, Ponto>();
    private ArrayList<Linha> linhasOrdenadas = new ArrayList<Linha>();
    private HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>> matrizResponsePonto = new HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>>();
    
    public ConfigResource() {
        
    }

    public void adicionarBus(Bus onibus) {
        Linha linha = onibus.pegarLinha();
        mapaOnibus.put(onibus.getId(), onibus);
        mapaOnibusLinha.put(onibus.getId(), linha);
        if(listaOnibus.containsKey(linha.getIdLinha())) listaOnibus.get(linha.getIdLinha()).add(onibus);
        else {
            ArrayList<Bus> list = new ArrayList<Bus>();
            list.add(onibus);
            listaOnibus.put(linha.getIdLinha(), list);
        }
        if(!mapaLinha.containsKey(linha.getIdLinha())) { 
            linhasOrdenadas.add(linha);
            Collections.sort(linhasOrdenadas);
            mapaLinha.put(linha.getIdLinha(), linha);
        }            
    }
    
    public void adicionarPonto(Ponto ponto) {
        if(!listaPontos.containsKey(ponto.getId()) && ponto.isPontoDeOnibus()) listaPontos.put(ponto.getId(), ponto);        
    }
    
    public void configurarPontos() {
        Iterator<Ponto> iteradorPontos = listaPontos.values().iterator();
        Date inicio = Calendar.getInstance().getTime();
        while(iteradorPontos.hasNext()) {            
            Ponto ponto = (Ponto) iteradorPontos.next();
            Iterator<Linha> iteradorLinhas = mapaLinha.values().iterator();
            ArrayList<Linha> listaLinhas = new ArrayList<Linha>();
            ArrayList<Bus> listaBuses = new ArrayList<Bus>();
            ArrayList<ResponsePonto> listaResponse = new ArrayList<ResponsePonto>();
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = new HashMap<Integer, ArrayList<ResponsePonto>>();            

            while(iteradorLinhas.hasNext()) {
                Linha linha = iteradorLinhas.next();
                ArrayList<ResponsePonto> listaMatriz = new ArrayList<ResponsePonto>();
                if(linha.pontoOnibusEstaNaLinha(ponto)) {
                    listaLinhas.add(linha);
                    Iterator<Bus> iteradorOnibus = listaOnibus.get(linha.getIdLinha()).iterator();
                    while(iteradorOnibus.hasNext()) {
                        Bus b = iteradorOnibus.next();
                        listaBuses.add(b);
                        ResponsePonto resp = new ResponsePonto(ponto, linha, b);
                        listaResponse.add(resp);
                        listaMatriz.add(resp);
                    }
                    Collections.sort(listaMatriz);
                    mapa.put(linha.getIdLinha(), listaMatriz);
                }
            }
            
            linhasNoPonto.put(ponto.getId(), listaLinhas);
            //onibusNoPonto.put(ponto.getId(), listaBuses);
            responseTodosOnibusNoPonto.put(ponto.getId(), listaResponse);
            matrizResponsePonto.put(ponto.getId(), mapa);
            
        }
        
        Date termino = Calendar.getInstance().getTime();
        System.out.println("tempo = "+(termino.getTime() - inicio.getTime()));
        
    }
    
    private void alterarLinhaOnibus(Bus bus, Linha nova) {
        Linha anterior = bus.pegarLinha();
        System.out.println("anterior = "+anterior.getIdLinha()+", nova = "+nova.getIdLinha());
        if(anterior.getIdLinha() != nova.getIdLinha()) {
            linhasNoPonto.clear();
            responseTodosOnibusNoPonto.clear();
            matrizResponsePonto.clear();
            mapaOnibusLinha.put(bus.getId(), nova);
            listaOnibus.get(anterior.getIdLinha()).remove(bus);
            listaOnibus.get(nova.getIdLinha()).add(bus);
            bus.setLinha(nova);
            System.out.println("ta aqui1");
            configurarPontos();
            System.out.println("ta aqui5");
        }        
    }
    
    public void atualizarTemposSistema() {
        Iterator<Bus> iteradorOnibus = mapaOnibus.values().iterator();
        for (Bus onibus : mapaOnibus.values()) {
            onibus.atualizarCrowdness();
        }
        
        Iterator<HashMap<Integer, ArrayList<ResponsePonto>>> iteradorPontos = matrizResponsePonto.values().iterator();
        
        for (Entry<Integer, ArrayList<Response>>(iteradorPontos.hasNext()) {            
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = iteradorPontos.next();
            Iterator<ArrayList<ResponsePonto>> iteradorLinhas = mapa.values().iterator();    

            while(iteradorLinhas.hasNext()) {                
                ArrayList<ResponsePonto> listaMatriz = iteradorLinhas.next();
                Iterator<ResponsePonto> iteradorResponse = listaMatriz.iterator();
                while(iteradorResponse.hasNext()) {
                    ResponsePonto resp = iteradorResponse.next();
                    resp.atualizar();
                }
                Collections.sort(listaMatriz);
            }            
        }
        
        Iterator<ArrayList<ResponsePonto>> iteradorLinhas2 = responseTodosOnibusNoPonto.values().iterator();
        while(iteradorLinhas2.hasNext()) {
            ArrayList<ResponsePonto> lista = iteradorLinhas2.next();
            Collections.sort(lista);
        }
        
        
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/bus/{id}/linha")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Linha getLinhaBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibusLinha.get(id);
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/todas_linhas")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public LinhaList getLinhaBusById()
    {
        return new LinhaList(linhasOrdenadas);
    }
    
    @GET    // retorna o onibus {id}
    @Path("/bus/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Bus getPosicaoBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibus.get(id);
    }
    
    @GET    // retorna todos os onibus na linha {id}
    @Path("/linha/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public BusList getOnibusNaLinha(@PathParam("id") @Valid IntParam id)
    {
        //System.out.println(listaOnibus.toString());    
        if(id.get() == 0) return new BusList(new ArrayList<Bus>(mapaOnibus.values()));
        return new BusList(listaOnibus.get(id.get()));
    }
    
    @GET    
    @Path("/ponto/{idPonto}/linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public ResponsePontoList getOnibusNoPonto(@PathParam("idPonto") @Valid IntParam varIdPonto,
                                              @PathParam("idLinha") @Valid IntParam varIdLinha)
    {
        int idPonto = varIdPonto.get();
        int idLinha = varIdLinha.get();
        Collections.sort(responseTodosOnibusNoPonto.get(idPonto));
        if(idLinha == 0) return new ResponsePontoList(responseTodosOnibusNoPonto.get(idPonto));
        return new ResponsePontoList(matrizResponsePonto.get(idPonto).get(idLinha));
    }
    
    @GET    
    @Path("/crowd/{idBus}/{value}")    
    @Consumes(MediaType.APPLICATION_JSON)
    public void teste(@PathParam("idBus") @Valid IntParam idBus,
            @PathParam("value") @Valid IntParam value) {
        
        int crowd = value.get();
        int idOnibus = idBus.get();
        if(crowd >= 1 && crowd <= 5) {
            if(mapaOnibus.containsKey(idOnibus)) {
                Bus bus = mapaOnibus.get(idOnibus);
                bus.adicionarCrowdness(crowd);
            }
        }

    }
    
//    @GET    
//    @Path("/pontos/{id}")    
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public PontoList getPontosNaLinha(@PathParam("id") @Valid IntParam id)
//    {
//        System.out.println(listaOnibus.toString());
//        ArrayList<Bus> list = new ArrayList<Bus>();
//        System.out.println("\n"+listaOnibus.containsKey(id)+" id = "+id.get()+"\n");
//        if(listaOnibus.containsKey(id.get())) {
//            list = listaOnibus.get(id.get()); 
//            System.out.println(list);
//        }        
//        return new BusList(list);
//    }
    
    @GET    
    @Path("/pontos_linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public PontoList getPontos(@PathParam("idLinha") @Valid IntParam varIdLinha)
    {     
        int idLinha = varIdLinha.get();
        if(idLinha == 0) return new PontoList(new ArrayList<Ponto>(listaPontos.values()));
        return new PontoList(mapaLinha.get(idLinha).pegarPontosNaLinha());
    }
    
    
    @GET
    @Path("/setargps/{id}/{latitude}/{longitude}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setBusPosition(
            @PathParam("id") @Valid IntParam id,
            @PathParam("latitude")  @Valid Double  latitude, 
            @PathParam("longitude")  @Valid Double longitude) {
        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
        try {
            checkNotNull(latitude);
            checkNotNull(longitude);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        mapaOnibus.get(id.get()).setPosicaoAtual(latitude,longitude);
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
    @GET
    @Path("/setarlinha/{idBus}/{idLinha}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setLinhaBus(
            @PathParam("idBus") @Valid IntParam idBus,
            @PathParam("idLinha")  @Valid IntParam  idLinha) {

        try {
            checkNotNull(idBus);
            checkNotNull(idLinha);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        if(mapaLinha.containsKey(idLinha.get())) {
            Linha l = mapaLinha.get(idLinha.get());
            if(mapaOnibus.containsKey(idBus.get())) {
                Bus b = mapaOnibus.get(idBus.get());            
                alterarLinhaOnibus(b, l);
            }
            else {
                Bus b = new Bus(idBus.get(), l);
                adicionarBus(b);
                linhasNoPonto.clear();
                responseTodosOnibusNoPonto.clear();
                matrizResponsePonto.clear();
                configurarPontos();
            }
        }
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
//    @POST
//    @Path("/{id}")
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public Response setBusPositionPost(
//            @PathParam("id") @Valid IntParam id,
//            @FormParam("latitude")  @Valid Double  latitude, 
//            @FormParam("longitude")  @Valid Double longitude) {
//        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
//        try {
//            checkNotNull(latitude);
//            checkNotNull(longitude);
//        } catch(Exception e) {
//            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
//        }      
//        
//        onibus.setPosicaoAtual(latitude,longitude);
//        
//        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();
//       
//    }

    

    
        
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-29 16:46:51.496
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-29 16:46:51.496
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-29 16:46:51.560
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package core;


import static com.google.common.base.Preconditions.checkNotNull;
import io.dropwizard.jersey.params.IntParam;

import java.net.HttpURLConnection;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;

import javax.validation.Valid;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;

import Response.BusList;
import Response.LinhaList;
import Response.PontoList;
import Response.ResponsePonto;
import Response.ResponsePontoList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Felipe Cousin
 */
@Path("/get")
public class ConfigResource {
    
    private HashMap<Integer, Bus> mapaOnibus = new HashMap<Integer, Bus>(); // chave é o id do onibus, e o onibus
    private HashMap<Integer, Linha> mapaOnibusLinha = new HashMap<Integer, Linha>(); // chave é o id do onibus, e a sua linha
    private HashMap<Integer, Linha> mapaLinha = new HashMap<Integer, Linha>(); // chave é o id da linha, e a linha       
    private HashMap<Integer, ArrayList<Bus>> listaOnibus = new HashMap<Integer, ArrayList<Bus>>(); // chave é id da linha, arraylist de todos onibus na linha
    private HashMap<Integer, ArrayList<Linha>> linhasNoPonto = new HashMap<Integer, ArrayList<Linha>>(); // chave é id do ponto, arraylist de todas as linhas que passam por ele
    //private HashMap<Integer, ArrayList<Bus>> onibusNoPonto = new HashMap<Integer, ArrayList<Bus>>(); // chave é id do ponto, arraylist de todos os pontos que passam por ele
    private HashMap<Integer, ArrayList<ResponsePonto>> responseTodosOnibusNoPonto = new HashMap<Integer, ArrayList<ResponsePonto>>(); // chave é id do ponto, arraylist de todos as respostas de onibus que passam por ele
    private HashMap<Integer, Ponto> listaPontos = new HashMap<Integer, Ponto>();
    private ArrayList<Linha> linhasOrdenadas = new ArrayList<Linha>();
    private HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>> matrizResponsePonto = new HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>>();
    
    public ConfigResource() {
        
    }

    public void adicionarBus(Bus onibus) {
        Linha linha = onibus.pegarLinha();
        mapaOnibus.put(onibus.getId(), onibus);
        mapaOnibusLinha.put(onibus.getId(), linha);
        if(listaOnibus.containsKey(linha.getIdLinha())) listaOnibus.get(linha.getIdLinha()).add(onibus);
        else {
            ArrayList<Bus> list = new ArrayList<Bus>();
            list.add(onibus);
            listaOnibus.put(linha.getIdLinha(), list);
        }
        if(!mapaLinha.containsKey(linha.getIdLinha())) { 
            linhasOrdenadas.add(linha);
            Collections.sort(linhasOrdenadas);
            mapaLinha.put(linha.getIdLinha(), linha);
        }            
    }
    
    public void adicionarPonto(Ponto ponto) {
        if(!listaPontos.containsKey(ponto.getId()) && ponto.isPontoDeOnibus()) listaPontos.put(ponto.getId(), ponto);        
    }
    
    public void configurarPontos() {
        Iterator<Ponto> iteradorPontos = listaPontos.values().iterator();
        Date inicio = Calendar.getInstance().getTime();
        while(iteradorPontos.hasNext()) {            
            Ponto ponto = (Ponto) iteradorPontos.next();
            Iterator<Linha> iteradorLinhas = mapaLinha.values().iterator();
            ArrayList<Linha> listaLinhas = new ArrayList<Linha>();
            ArrayList<Bus> listaBuses = new ArrayList<Bus>();
            ArrayList<ResponsePonto> listaResponse = new ArrayList<ResponsePonto>();
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = new HashMap<Integer, ArrayList<ResponsePonto>>();            

            while(iteradorLinhas.hasNext()) {
                Linha linha = iteradorLinhas.next();
                ArrayList<ResponsePonto> listaMatriz = new ArrayList<ResponsePonto>();
                if(linha.pontoOnibusEstaNaLinha(ponto)) {
                    listaLinhas.add(linha);
                    Iterator<Bus> iteradorOnibus = listaOnibus.get(linha.getIdLinha()).iterator();
                    while(iteradorOnibus.hasNext()) {
                        Bus b = iteradorOnibus.next();
                        listaBuses.add(b);
                        ResponsePonto resp = new ResponsePonto(ponto, linha, b);
                        listaResponse.add(resp);
                        listaMatriz.add(resp);
                    }
                    Collections.sort(listaMatriz);
                    mapa.put(linha.getIdLinha(), listaMatriz);
                }
            }
            
            linhasNoPonto.put(ponto.getId(), listaLinhas);
            //onibusNoPonto.put(ponto.getId(), listaBuses);
            responseTodosOnibusNoPonto.put(ponto.getId(), listaResponse);
            matrizResponsePonto.put(ponto.getId(), mapa);
            
        }
        
        Date termino = Calendar.getInstance().getTime();
        System.out.println("tempo = "+(termino.getTime() - inicio.getTime()));
        
    }
    
    private void alterarLinhaOnibus(Bus bus, Linha nova) {
        Linha anterior = bus.pegarLinha();
        System.out.println("anterior = "+anterior.getIdLinha()+", nova = "+nova.getIdLinha());
        if(anterior.getIdLinha() != nova.getIdLinha()) {
            linhasNoPonto.clear();
            responseTodosOnibusNoPonto.clear();
            matrizResponsePonto.clear();
            mapaOnibusLinha.put(bus.getId(), nova);
            listaOnibus.get(anterior.getIdLinha()).remove(bus);
            listaOnibus.get(nova.getIdLinha()).add(bus);
            bus.setLinha(nova);
            System.out.println("ta aqui1");
            configurarPontos();
            System.out.println("ta aqui5");
        }        
    }
    
    public void atualizarTemposSistema() {
        Iterator<Bus> iteradorOnibus = mapaOnibus.values().iterator();
        for (Bus onibus : mapaOnibus.values()) {
            onibus.atualizarCrowdness();
        }
        
        Iterator<HashMap<Integer, ArrayList<ResponsePonto>>> iteradorPontos = matrizResponsePonto.values().iterator();
        
        for (Entry<Integer, ArrayList<Response>>(iteradorPontos.hasNext()) {            
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = iteradorPontos.next();
            Iterator<ArrayList<ResponsePonto>> iteradorLinhas = mapa.values().iterator();    

            while(iteradorLinhas.hasNext()) {                
                ArrayList<ResponsePonto> listaMatriz = iteradorLinhas.next();
                Iterator<ResponsePonto> iteradorResponse = listaMatriz.iterator();
                while(iteradorResponse.hasNext()) {
                    ResponsePonto resp = iteradorResponse.next();
                    resp.atualizar();
                }
                Collections.sort(listaMatriz);
            }            
        }
        
        Iterator<ArrayList<ResponsePonto>> iteradorLinhas2 = responseTodosOnibusNoPonto.values().iterator();
        while(iteradorLinhas2.hasNext()) {
            ArrayList<ResponsePonto> lista = iteradorLinhas2.next();
            Collections.sort(lista);
        }
        
        
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/bus/{id}/linha")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Linha getLinhaBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibusLinha.get(id);
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/todas_linhas")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public LinhaList getLinhaBusById()
    {
        return new LinhaList(linhasOrdenadas);
    }
    
    @GET    // retorna o onibus {id}
    @Path("/bus/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Bus getPosicaoBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibus.get(id);
    }
    
    @GET    // retorna todos os onibus na linha {id}
    @Path("/linha/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public BusList getOnibusNaLinha(@PathParam("id") @Valid IntParam id)
    {
        //System.out.println(listaOnibus.toString());    
        if(id.get() == 0) return new BusList(new ArrayList<Bus>(mapaOnibus.values()));
        return new BusList(listaOnibus.get(id.get()));
    }
    
    @GET    
    @Path("/ponto/{idPonto}/linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public ResponsePontoList getOnibusNoPonto(@PathParam("idPonto") @Valid IntParam varIdPonto,
                                              @PathParam("idLinha") @Valid IntParam varIdLinha)
    {
        int idPonto = varIdPonto.get();
        int idLinha = varIdLinha.get();
        Collections.sort(responseTodosOnibusNoPonto.get(idPonto));
        if(idLinha == 0) return new ResponsePontoList(responseTodosOnibusNoPonto.get(idPonto));
        return new ResponsePontoList(matrizResponsePonto.get(idPonto).get(idLinha));
    }
    
    @GET    
    @Path("/crowd/{idBus}/{value}")    
    @Consumes(MediaType.APPLICATION_JSON)
    public void teste(@PathParam("idBus") @Valid IntParam idBus,
            @PathParam("value") @Valid IntParam value) {
        
        int crowd = value.get();
        int idOnibus = idBus.get();
        if(crowd >= 1 && crowd <= 5) {
            if(mapaOnibus.containsKey(idOnibus)) {
                Bus bus = mapaOnibus.get(idOnibus);
                bus.adicionarCrowdness(crowd);
            }
        }

    }
    
//    @GET    
//    @Path("/pontos/{id}")    
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public PontoList getPontosNaLinha(@PathParam("id") @Valid IntParam id)
//    {
//        System.out.println(listaOnibus.toString());
//        ArrayList<Bus> list = new ArrayList<Bus>();
//        System.out.println("\n"+listaOnibus.containsKey(id)+" id = "+id.get()+"\n");
//        if(listaOnibus.containsKey(id.get())) {
//            list = listaOnibus.get(id.get()); 
//            System.out.println(list);
//        }        
//        return new BusList(list);
//    }
    
    @GET    
    @Path("/pontos_linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public PontoList getPontos(@PathParam("idLinha") @Valid IntParam varIdLinha)
    {     
        int idLinha = varIdLinha.get();
        if(idLinha == 0) return new PontoList(new ArrayList<Ponto>(listaPontos.values()));
        return new PontoList(mapaLinha.get(idLinha).pegarPontosNaLinha());
    }
    
    
    @GET
    @Path("/setargps/{id}/{latitude}/{longitude}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setBusPosition(
            @PathParam("id") @Valid IntParam id,
            @PathParam("latitude")  @Valid Double  latitude, 
            @PathParam("longitude")  @Valid Double longitude) {
        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
        try {
            checkNotNull(latitude);
            checkNotNull(longitude);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        mapaOnibus.get(id.get()).setPosicaoAtual(latitude,longitude);
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
    @GET
    @Path("/setarlinha/{idBus}/{idLinha}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setLinhaBus(
            @PathParam("idBus") @Valid IntParam idBus,
            @PathParam("idLinha")  @Valid IntParam  idLinha) {

        try {
            checkNotNull(idBus);
            checkNotNull(idLinha);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        if(mapaLinha.containsKey(idLinha.get())) {
            Linha l = mapaLinha.get(idLinha.get());
            if(mapaOnibus.containsKey(idBus.get())) {
                Bus b = mapaOnibus.get(idBus.get());            
                alterarLinhaOnibus(b, l);
            }
            else {
                Bus b = new Bus(idBus.get(), l);
                adicionarBus(b);
                linhasNoPonto.clear();
                responseTodosOnibusNoPonto.clear();
                matrizResponsePonto.clear();
                configurarPontos();
            }
        }
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
//    @POST
//    @Path("/{id}")
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public Response setBusPositionPost(
//            @PathParam("id") @Valid IntParam id,
//            @FormParam("latitude")  @Valid Double  latitude, 
//            @FormParam("longitude")  @Valid Double longitude) {
//        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
//        try {
//            checkNotNull(latitude);
//            checkNotNull(longitude);
//        } catch(Exception e) {
//            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
//        }      
//        
//        onibus.setPosicaoAtual(latitude,longitude);
//        
//        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();
//       
//    }

    

    
        
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-29 16:46:51.561
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-29 16:46:51.562
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-29 16:46:57.568
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package core;


import static com.google.common.base.Preconditions.checkNotNull;
import io.dropwizard.jersey.params.IntParam;

import java.net.HttpURLConnection;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;

import javax.validation.Valid;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;

import Response.BusList;
import Response.LinhaList;
import Response.PontoList;
import Response.ResponsePonto;
import Response.ResponsePontoList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Felipe Cousin
 */
@Path("/get")
public class ConfigResource {
    
    private HashMap<Integer, Bus> mapaOnibus = new HashMap<Integer, Bus>(); // chave é o id do onibus, e o onibus
    private HashMap<Integer, Linha> mapaOnibusLinha = new HashMap<Integer, Linha>(); // chave é o id do onibus, e a sua linha
    private HashMap<Integer, Linha> mapaLinha = new HashMap<Integer, Linha>(); // chave é o id da linha, e a linha       
    private HashMap<Integer, ArrayList<Bus>> listaOnibus = new HashMap<Integer, ArrayList<Bus>>(); // chave é id da linha, arraylist de todos onibus na linha
    private HashMap<Integer, ArrayList<Linha>> linhasNoPonto = new HashMap<Integer, ArrayList<Linha>>(); // chave é id do ponto, arraylist de todas as linhas que passam por ele
    //private HashMap<Integer, ArrayList<Bus>> onibusNoPonto = new HashMap<Integer, ArrayList<Bus>>(); // chave é id do ponto, arraylist de todos os pontos que passam por ele
    private HashMap<Integer, ArrayList<ResponsePonto>> responseTodosOnibusNoPonto = new HashMap<Integer, ArrayList<ResponsePonto>>(); // chave é id do ponto, arraylist de todos as respostas de onibus que passam por ele
    private HashMap<Integer, Ponto> listaPontos = new HashMap<Integer, Ponto>();
    private ArrayList<Linha> linhasOrdenadas = new ArrayList<Linha>();
    private HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>> matrizResponsePonto = new HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>>();
    
    public ConfigResource() {
        
    }

    public void adicionarBus(Bus onibus) {
        Linha linha = onibus.pegarLinha();
        mapaOnibus.put(onibus.getId(), onibus);
        mapaOnibusLinha.put(onibus.getId(), linha);
        if(listaOnibus.containsKey(linha.getIdLinha())) listaOnibus.get(linha.getIdLinha()).add(onibus);
        else {
            ArrayList<Bus> list = new ArrayList<Bus>();
            list.add(onibus);
            listaOnibus.put(linha.getIdLinha(), list);
        }
        if(!mapaLinha.containsKey(linha.getIdLinha())) { 
            linhasOrdenadas.add(linha);
            Collections.sort(linhasOrdenadas);
            mapaLinha.put(linha.getIdLinha(), linha);
        }            
    }
    
    public void adicionarPonto(Ponto ponto) {
        if(!listaPontos.containsKey(ponto.getId()) && ponto.isPontoDeOnibus()) listaPontos.put(ponto.getId(), ponto);        
    }
    
    public void configurarPontos() {
        Iterator<Ponto> iteradorPontos = listaPontos.values().iterator();
        Date inicio = Calendar.getInstance().getTime();
        while(iteradorPontos.hasNext()) {            
            Ponto ponto = (Ponto) iteradorPontos.next();
            Iterator<Linha> iteradorLinhas = mapaLinha.values().iterator();
            ArrayList<Linha> listaLinhas = new ArrayList<Linha>();
            ArrayList<Bus> listaBuses = new ArrayList<Bus>();
            ArrayList<ResponsePonto> listaResponse = new ArrayList<ResponsePonto>();
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = new HashMap<Integer, ArrayList<ResponsePonto>>();            

            while(iteradorLinhas.hasNext()) {
                Linha linha = iteradorLinhas.next();
                ArrayList<ResponsePonto> listaMatriz = new ArrayList<ResponsePonto>();
                if(linha.pontoOnibusEstaNaLinha(ponto)) {
                    listaLinhas.add(linha);
                    Iterator<Bus> iteradorOnibus = listaOnibus.get(linha.getIdLinha()).iterator();
                    while(iteradorOnibus.hasNext()) {
                        Bus b = iteradorOnibus.next();
                        listaBuses.add(b);
                        ResponsePonto resp = new ResponsePonto(ponto, linha, b);
                        listaResponse.add(resp);
                        listaMatriz.add(resp);
                    }
                    Collections.sort(listaMatriz);
                    mapa.put(linha.getIdLinha(), listaMatriz);
                }
            }
            
            linhasNoPonto.put(ponto.getId(), listaLinhas);
            //onibusNoPonto.put(ponto.getId(), listaBuses);
            responseTodosOnibusNoPonto.put(ponto.getId(), listaResponse);
            matrizResponsePonto.put(ponto.getId(), mapa);
            
        }
        
        Date termino = Calendar.getInstance().getTime();
        System.out.println("tempo = "+(termino.getTime() - inicio.getTime()));
        
    }
    
    private void alterarLinhaOnibus(Bus bus, Linha nova) {
        Linha anterior = bus.pegarLinha();
        System.out.println("anterior = "+anterior.getIdLinha()+", nova = "+nova.getIdLinha());
        if(anterior.getIdLinha() != nova.getIdLinha()) {
            linhasNoPonto.clear();
            responseTodosOnibusNoPonto.clear();
            matrizResponsePonto.clear();
            mapaOnibusLinha.put(bus.getId(), nova);
            listaOnibus.get(anterior.getIdLinha()).remove(bus);
            listaOnibus.get(nova.getIdLinha()).add(bus);
            bus.setLinha(nova);
            System.out.println("ta aqui1");
            configurarPontos();
            System.out.println("ta aqui5");
        }        
    }
    
    public void atualizarTemposSistema() {
        Iterator<Bus> iteradorOnibus = mapaOnibus.values().iterator();
        for (Bus onibus : mapaOnibus.values()) {
            onibus.atualizarCrowdness();
        }
        
        Iterator<HashMap<Integer, ArrayList<ResponsePonto>>> iteradorPontos = matrizResponsePonto.values().iterator();
        
        for (Entry<Integer, ArrayList<ResponsePonto >>(iteradorPontos.hasNext()) {            
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = iteradorPontos.next();
            Iterator<ArrayList<ResponsePonto>> iteradorLinhas = mapa.values().iterator();    

            while(iteradorLinhas.hasNext()) {                
                ArrayList<ResponsePonto> listaMatriz = iteradorLinhas.next();
                Iterator<ResponsePonto> iteradorResponse = listaMatriz.iterator();
                while(iteradorResponse.hasNext()) {
                    ResponsePonto resp = iteradorResponse.next();
                    resp.atualizar();
                }
                Collections.sort(listaMatriz);
            }            
        }
        
        Iterator<ArrayList<ResponsePonto>> iteradorLinhas2 = responseTodosOnibusNoPonto.values().iterator();
        while(iteradorLinhas2.hasNext()) {
            ArrayList<ResponsePonto> lista = iteradorLinhas2.next();
            Collections.sort(lista);
        }
        
        
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/bus/{id}/linha")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Linha getLinhaBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibusLinha.get(id);
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/todas_linhas")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public LinhaList getLinhaBusById()
    {
        return new LinhaList(linhasOrdenadas);
    }
    
    @GET    // retorna o onibus {id}
    @Path("/bus/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Bus getPosicaoBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibus.get(id);
    }
    
    @GET    // retorna todos os onibus na linha {id}
    @Path("/linha/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public BusList getOnibusNaLinha(@PathParam("id") @Valid IntParam id)
    {
        //System.out.println(listaOnibus.toString());    
        if(id.get() == 0) return new BusList(new ArrayList<Bus>(mapaOnibus.values()));
        return new BusList(listaOnibus.get(id.get()));
    }
    
    @GET    
    @Path("/ponto/{idPonto}/linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public ResponsePontoList getOnibusNoPonto(@PathParam("idPonto") @Valid IntParam varIdPonto,
                                              @PathParam("idLinha") @Valid IntParam varIdLinha)
    {
        int idPonto = varIdPonto.get();
        int idLinha = varIdLinha.get();
        Collections.sort(responseTodosOnibusNoPonto.get(idPonto));
        if(idLinha == 0) return new ResponsePontoList(responseTodosOnibusNoPonto.get(idPonto));
        return new ResponsePontoList(matrizResponsePonto.get(idPonto).get(idLinha));
    }
    
    @GET    
    @Path("/crowd/{idBus}/{value}")    
    @Consumes(MediaType.APPLICATION_JSON)
    public void teste(@PathParam("idBus") @Valid IntParam idBus,
            @PathParam("value") @Valid IntParam value) {
        
        int crowd = value.get();
        int idOnibus = idBus.get();
        if(crowd >= 1 && crowd <= 5) {
            if(mapaOnibus.containsKey(idOnibus)) {
                Bus bus = mapaOnibus.get(idOnibus);
                bus.adicionarCrowdness(crowd);
            }
        }

    }
    
//    @GET    
//    @Path("/pontos/{id}")    
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public PontoList getPontosNaLinha(@PathParam("id") @Valid IntParam id)
//    {
//        System.out.println(listaOnibus.toString());
//        ArrayList<Bus> list = new ArrayList<Bus>();
//        System.out.println("\n"+listaOnibus.containsKey(id)+" id = "+id.get()+"\n");
//        if(listaOnibus.containsKey(id.get())) {
//            list = listaOnibus.get(id.get()); 
//            System.out.println(list);
//        }        
//        return new BusList(list);
//    }
    
    @GET    
    @Path("/pontos_linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public PontoList getPontos(@PathParam("idLinha") @Valid IntParam varIdLinha)
    {     
        int idLinha = varIdLinha.get();
        if(idLinha == 0) return new PontoList(new ArrayList<Ponto>(listaPontos.values()));
        return new PontoList(mapaLinha.get(idLinha).pegarPontosNaLinha());
    }
    
    
    @GET
    @Path("/setargps/{id}/{latitude}/{longitude}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setBusPosition(
            @PathParam("id") @Valid IntParam id,
            @PathParam("latitude")  @Valid Double  latitude, 
            @PathParam("longitude")  @Valid Double longitude) {
        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
        try {
            checkNotNull(latitude);
            checkNotNull(longitude);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        mapaOnibus.get(id.get()).setPosicaoAtual(latitude,longitude);
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
    @GET
    @Path("/setarlinha/{idBus}/{idLinha}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setLinhaBus(
            @PathParam("idBus") @Valid IntParam idBus,
            @PathParam("idLinha")  @Valid IntParam  idLinha) {

        try {
            checkNotNull(idBus);
            checkNotNull(idLinha);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        if(mapaLinha.containsKey(idLinha.get())) {
            Linha l = mapaLinha.get(idLinha.get());
            if(mapaOnibus.containsKey(idBus.get())) {
                Bus b = mapaOnibus.get(idBus.get());            
                alterarLinhaOnibus(b, l);
            }
            else {
                Bus b = new Bus(idBus.get(), l);
                adicionarBus(b);
                linhasNoPonto.clear();
                responseTodosOnibusNoPonto.clear();
                matrizResponsePonto.clear();
                configurarPontos();
            }
        }
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
//    @POST
//    @Path("/{id}")
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public Response setBusPositionPost(
//            @PathParam("id") @Valid IntParam id,
//            @FormParam("latitude")  @Valid Double  latitude, 
//            @FormParam("longitude")  @Valid Double longitude) {
//        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
//        try {
//            checkNotNull(latitude);
//            checkNotNull(longitude);
//        } catch(Exception e) {
//            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
//        }      
//        
//        onibus.setPosicaoAtual(latitude,longitude);
//        
//        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();
//       
//    }

    

    
        
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-29 16:46:57.568
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-29 16:46:57.569
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-29 16:46:58.421
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package core;


import static com.google.common.base.Preconditions.checkNotNull;
import io.dropwizard.jersey.params.IntParam;

import java.net.HttpURLConnection;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;

import javax.validation.Valid;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;

import Response.BusList;
import Response.LinhaList;
import Response.PontoList;
import Response.ResponsePonto;
import Response.ResponsePontoList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Felipe Cousin
 */
@Path("/get")
public class ConfigResource {
    
    private HashMap<Integer, Bus> mapaOnibus = new HashMap<Integer, Bus>(); // chave é o id do onibus, e o onibus
    private HashMap<Integer, Linha> mapaOnibusLinha = new HashMap<Integer, Linha>(); // chave é o id do onibus, e a sua linha
    private HashMap<Integer, Linha> mapaLinha = new HashMap<Integer, Linha>(); // chave é o id da linha, e a linha       
    private HashMap<Integer, ArrayList<Bus>> listaOnibus = new HashMap<Integer, ArrayList<Bus>>(); // chave é id da linha, arraylist de todos onibus na linha
    private HashMap<Integer, ArrayList<Linha>> linhasNoPonto = new HashMap<Integer, ArrayList<Linha>>(); // chave é id do ponto, arraylist de todas as linhas que passam por ele
    //private HashMap<Integer, ArrayList<Bus>> onibusNoPonto = new HashMap<Integer, ArrayList<Bus>>(); // chave é id do ponto, arraylist de todos os pontos que passam por ele
    private HashMap<Integer, ArrayList<ResponsePonto>> responseTodosOnibusNoPonto = new HashMap<Integer, ArrayList<ResponsePonto>>(); // chave é id do ponto, arraylist de todos as respostas de onibus que passam por ele
    private HashMap<Integer, Ponto> listaPontos = new HashMap<Integer, Ponto>();
    private ArrayList<Linha> linhasOrdenadas = new ArrayList<Linha>();
    private HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>> matrizResponsePonto = new HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>>();
    
    public ConfigResource() {
        
    }

    public void adicionarBus(Bus onibus) {
        Linha linha = onibus.pegarLinha();
        mapaOnibus.put(onibus.getId(), onibus);
        mapaOnibusLinha.put(onibus.getId(), linha);
        if(listaOnibus.containsKey(linha.getIdLinha())) listaOnibus.get(linha.getIdLinha()).add(onibus);
        else {
            ArrayList<Bus> list = new ArrayList<Bus>();
            list.add(onibus);
            listaOnibus.put(linha.getIdLinha(), list);
        }
        if(!mapaLinha.containsKey(linha.getIdLinha())) { 
            linhasOrdenadas.add(linha);
            Collections.sort(linhasOrdenadas);
            mapaLinha.put(linha.getIdLinha(), linha);
        }            
    }
    
    public void adicionarPonto(Ponto ponto) {
        if(!listaPontos.containsKey(ponto.getId()) && ponto.isPontoDeOnibus()) listaPontos.put(ponto.getId(), ponto);        
    }
    
    public void configurarPontos() {
        Iterator<Ponto> iteradorPontos = listaPontos.values().iterator();
        Date inicio = Calendar.getInstance().getTime();
        while(iteradorPontos.hasNext()) {            
            Ponto ponto = (Ponto) iteradorPontos.next();
            Iterator<Linha> iteradorLinhas = mapaLinha.values().iterator();
            ArrayList<Linha> listaLinhas = new ArrayList<Linha>();
            ArrayList<Bus> listaBuses = new ArrayList<Bus>();
            ArrayList<ResponsePonto> listaResponse = new ArrayList<ResponsePonto>();
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = new HashMap<Integer, ArrayList<ResponsePonto>>();            

            while(iteradorLinhas.hasNext()) {
                Linha linha = iteradorLinhas.next();
                ArrayList<ResponsePonto> listaMatriz = new ArrayList<ResponsePonto>();
                if(linha.pontoOnibusEstaNaLinha(ponto)) {
                    listaLinhas.add(linha);
                    Iterator<Bus> iteradorOnibus = listaOnibus.get(linha.getIdLinha()).iterator();
                    while(iteradorOnibus.hasNext()) {
                        Bus b = iteradorOnibus.next();
                        listaBuses.add(b);
                        ResponsePonto resp = new ResponsePonto(ponto, linha, b);
                        listaResponse.add(resp);
                        listaMatriz.add(resp);
                    }
                    Collections.sort(listaMatriz);
                    mapa.put(linha.getIdLinha(), listaMatriz);
                }
            }
            
            linhasNoPonto.put(ponto.getId(), listaLinhas);
            //onibusNoPonto.put(ponto.getId(), listaBuses);
            responseTodosOnibusNoPonto.put(ponto.getId(), listaResponse);
            matrizResponsePonto.put(ponto.getId(), mapa);
            
        }
        
        Date termino = Calendar.getInstance().getTime();
        System.out.println("tempo = "+(termino.getTime() - inicio.getTime()));
        
    }
    
    private void alterarLinhaOnibus(Bus bus, Linha nova) {
        Linha anterior = bus.pegarLinha();
        System.out.println("anterior = "+anterior.getIdLinha()+", nova = "+nova.getIdLinha());
        if(anterior.getIdLinha() != nova.getIdLinha()) {
            linhasNoPonto.clear();
            responseTodosOnibusNoPonto.clear();
            matrizResponsePonto.clear();
            mapaOnibusLinha.put(bus.getId(), nova);
            listaOnibus.get(anterior.getIdLinha()).remove(bus);
            listaOnibus.get(nova.getIdLinha()).add(bus);
            bus.setLinha(nova);
            System.out.println("ta aqui1");
            configurarPontos();
            System.out.println("ta aqui5");
        }        
    }
    
    public void atualizarTemposSistema() {
        Iterator<Bus> iteradorOnibus = mapaOnibus.values().iterator();
        for (Bus onibus : mapaOnibus.values()) {
            onibus.atualizarCrowdness();
        }
        
        Iterator<HashMap<Integer, ArrayList<ResponsePonto>>> iteradorPontos = matrizResponsePonto.values().iterator();
        
        for (Entry<Integer, ArrayList<ResponsePonto >>(iteradorPontos.hasNext()) {            
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = iteradorPontos.next();
            Iterator<ArrayList<ResponsePonto>> iteradorLinhas = mapa.values().iterator();    

            while(iteradorLinhas.hasNext()) {                
                ArrayList<ResponsePonto> listaMatriz = iteradorLinhas.next();
                Iterator<ResponsePonto> iteradorResponse = listaMatriz.iterator();
                while(iteradorResponse.hasNext()) {
                    ResponsePonto resp = iteradorResponse.next();
                    resp.atualizar();
                }
                Collections.sort(listaMatriz);
            }            
        }
        
        Iterator<ArrayList<ResponsePonto>> iteradorLinhas2 = responseTodosOnibusNoPonto.values().iterator();
        while(iteradorLinhas2.hasNext()) {
            ArrayList<ResponsePonto> lista = iteradorLinhas2.next();
            Collections.sort(lista);
        }
        
        
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/bus/{id}/linha")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Linha getLinhaBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibusLinha.get(id);
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/todas_linhas")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public LinhaList getLinhaBusById()
    {
        return new LinhaList(linhasOrdenadas);
    }
    
    @GET    // retorna o onibus {id}
    @Path("/bus/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Bus getPosicaoBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibus.get(id);
    }
    
    @GET    // retorna todos os onibus na linha {id}
    @Path("/linha/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public BusList getOnibusNaLinha(@PathParam("id") @Valid IntParam id)
    {
        //System.out.println(listaOnibus.toString());    
        if(id.get() == 0) return new BusList(new ArrayList<Bus>(mapaOnibus.values()));
        return new BusList(listaOnibus.get(id.get()));
    }
    
    @GET    
    @Path("/ponto/{idPonto}/linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public ResponsePontoList getOnibusNoPonto(@PathParam("idPonto") @Valid IntParam varIdPonto,
                                              @PathParam("idLinha") @Valid IntParam varIdLinha)
    {
        int idPonto = varIdPonto.get();
        int idLinha = varIdLinha.get();
        Collections.sort(responseTodosOnibusNoPonto.get(idPonto));
        if(idLinha == 0) return new ResponsePontoList(responseTodosOnibusNoPonto.get(idPonto));
        return new ResponsePontoList(matrizResponsePonto.get(idPonto).get(idLinha));
    }
    
    @GET    
    @Path("/crowd/{idBus}/{value}")    
    @Consumes(MediaType.APPLICATION_JSON)
    public void teste(@PathParam("idBus") @Valid IntParam idBus,
            @PathParam("value") @Valid IntParam value) {
        
        int crowd = value.get();
        int idOnibus = idBus.get();
        if(crowd >= 1 && crowd <= 5) {
            if(mapaOnibus.containsKey(idOnibus)) {
                Bus bus = mapaOnibus.get(idOnibus);
                bus.adicionarCrowdness(crowd);
            }
        }

    }
    
//    @GET    
//    @Path("/pontos/{id}")    
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public PontoList getPontosNaLinha(@PathParam("id") @Valid IntParam id)
//    {
//        System.out.println(listaOnibus.toString());
//        ArrayList<Bus> list = new ArrayList<Bus>();
//        System.out.println("\n"+listaOnibus.containsKey(id)+" id = "+id.get()+"\n");
//        if(listaOnibus.containsKey(id.get())) {
//            list = listaOnibus.get(id.get()); 
//            System.out.println(list);
//        }        
//        return new BusList(list);
//    }
    
    @GET    
    @Path("/pontos_linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public PontoList getPontos(@PathParam("idLinha") @Valid IntParam varIdLinha)
    {     
        int idLinha = varIdLinha.get();
        if(idLinha == 0) return new PontoList(new ArrayList<Ponto>(listaPontos.values()));
        return new PontoList(mapaLinha.get(idLinha).pegarPontosNaLinha());
    }
    
    
    @GET
    @Path("/setargps/{id}/{latitude}/{longitude}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setBusPosition(
            @PathParam("id") @Valid IntParam id,
            @PathParam("latitude")  @Valid Double  latitude, 
            @PathParam("longitude")  @Valid Double longitude) {
        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
        try {
            checkNotNull(latitude);
            checkNotNull(longitude);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        mapaOnibus.get(id.get()).setPosicaoAtual(latitude,longitude);
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
    @GET
    @Path("/setarlinha/{idBus}/{idLinha}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setLinhaBus(
            @PathParam("idBus") @Valid IntParam idBus,
            @PathParam("idLinha")  @Valid IntParam  idLinha) {

        try {
            checkNotNull(idBus);
            checkNotNull(idLinha);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        if(mapaLinha.containsKey(idLinha.get())) {
            Linha l = mapaLinha.get(idLinha.get());
            if(mapaOnibus.containsKey(idBus.get())) {
                Bus b = mapaOnibus.get(idBus.get());            
                alterarLinhaOnibus(b, l);
            }
            else {
                Bus b = new Bus(idBus.get(), l);
                adicionarBus(b);
                linhasNoPonto.clear();
                responseTodosOnibusNoPonto.clear();
                matrizResponsePonto.clear();
                configurarPontos();
            }
        }
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
//    @POST
//    @Path("/{id}")
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public Response setBusPositionPost(
//            @PathParam("id") @Valid IntParam id,
//            @FormParam("latitude")  @Valid Double  latitude, 
//            @FormParam("longitude")  @Valid Double longitude) {
//        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
//        try {
//            checkNotNull(latitude);
//            checkNotNull(longitude);
//        } catch(Exception e) {
//            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
//        }      
//        
//        onibus.setPosicaoAtual(latitude,longitude);
//        
//        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();
//       
//    }

    

    
        
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-29 16:46:58.422
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-29 16:46:58.422
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:292)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1209)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:809)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-29 16:46:58.561
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package core;


import static com.google.common.base.Preconditions.checkNotNull;
import io.dropwizard.jersey.params.IntParam;

import java.net.HttpURLConnection;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;

import javax.validation.Valid;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;

import Response.BusList;
import Response.LinhaList;
import Response.PontoList;
import Response.ResponsePonto;
import Response.ResponsePontoList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Felipe Cousin
 */
@Path("/get")
public class ConfigResource {
    
    private HashMap<Integer, Bus> mapaOnibus = new HashMap<Integer, Bus>(); // chave é o id do onibus, e o onibus
    private HashMap<Integer, Linha> mapaOnibusLinha = new HashMap<Integer, Linha>(); // chave é o id do onibus, e a sua linha
    private HashMap<Integer, Linha> mapaLinha = new HashMap<Integer, Linha>(); // chave é o id da linha, e a linha       
    private HashMap<Integer, ArrayList<Bus>> listaOnibus = new HashMap<Integer, ArrayList<Bus>>(); // chave é id da linha, arraylist de todos onibus na linha
    private HashMap<Integer, ArrayList<Linha>> linhasNoPonto = new HashMap<Integer, ArrayList<Linha>>(); // chave é id do ponto, arraylist de todas as linhas que passam por ele
    //private HashMap<Integer, ArrayList<Bus>> onibusNoPonto = new HashMap<Integer, ArrayList<Bus>>(); // chave é id do ponto, arraylist de todos os pontos que passam por ele
    private HashMap<Integer, ArrayList<ResponsePonto>> responseTodosOnibusNoPonto = new HashMap<Integer, ArrayList<ResponsePonto>>(); // chave é id do ponto, arraylist de todos as respostas de onibus que passam por ele
    private HashMap<Integer, Ponto> listaPontos = new HashMap<Integer, Ponto>();
    private ArrayList<Linha> linhasOrdenadas = new ArrayList<Linha>();
    private HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>> matrizResponsePonto = new HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>>();
    
    public ConfigResource() {
        
    }

    public void adicionarBus(Bus onibus) {
        Linha linha = onibus.pegarLinha();
        mapaOnibus.put(onibus.getId(), onibus);
        mapaOnibusLinha.put(onibus.getId(), linha);
        if(listaOnibus.containsKey(linha.getIdLinha())) listaOnibus.get(linha.getIdLinha()).add(onibus);
        else {
            ArrayList<Bus> list = new ArrayList<Bus>();
            list.add(onibus);
            listaOnibus.put(linha.getIdLinha(), list);
        }
        if(!mapaLinha.containsKey(linha.getIdLinha())) { 
            linhasOrdenadas.add(linha);
            Collections.sort(linhasOrdenadas);
            mapaLinha.put(linha.getIdLinha(), linha);
        }            
    }
    
    public void adicionarPonto(Ponto ponto) {
        if(!listaPontos.containsKey(ponto.getId()) && ponto.isPontoDeOnibus()) listaPontos.put(ponto.getId(), ponto);        
    }
    
    public void configurarPontos() {
        Iterator<Ponto> iteradorPontos = listaPontos.values().iterator();
        Date inicio = Calendar.getInstance().getTime();
        while(iteradorPontos.hasNext()) {            
            Ponto ponto = (Ponto) iteradorPontos.next();
            Iterator<Linha> iteradorLinhas = mapaLinha.values().iterator();
            ArrayList<Linha> listaLinhas = new ArrayList<Linha>();
            ArrayList<Bus> listaBuses = new ArrayList<Bus>();
            ArrayList<ResponsePonto> listaResponse = new ArrayList<ResponsePonto>();
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = new HashMap<Integer, ArrayList<ResponsePonto>>();            

            while(iteradorLinhas.hasNext()) {
                Linha linha = iteradorLinhas.next();
                ArrayList<ResponsePonto> listaMatriz = new ArrayList<ResponsePonto>();
                if(linha.pontoOnibusEstaNaLinha(ponto)) {
                    listaLinhas.add(linha);
                    Iterator<Bus> iteradorOnibus = listaOnibus.get(linha.getIdLinha()).iterator();
                    while(iteradorOnibus.hasNext()) {
                        Bus b = iteradorOnibus.next();
                        listaBuses.add(b);
                        ResponsePonto resp = new ResponsePonto(ponto, linha, b);
                        listaResponse.add(resp);
                        listaMatriz.add(resp);
                    }
                    Collections.sort(listaMatriz);
                    mapa.put(linha.getIdLinha(), listaMatriz);
                }
            }
            
            linhasNoPonto.put(ponto.getId(), listaLinhas);
            //onibusNoPonto.put(ponto.getId(), listaBuses);
            responseTodosOnibusNoPonto.put(ponto.getId(), listaResponse);
            matrizResponsePonto.put(ponto.getId(), mapa);
            
        }
        
        Date termino = Calendar.getInstance().getTime();
        System.out.println("tempo = "+(termino.getTime() - inicio.getTime()));
        
    }
    
    private void alterarLinhaOnibus(Bus bus, Linha nova) {
        Linha anterior = bus.pegarLinha();
        System.out.println("anterior = "+anterior.getIdLinha()+", nova = "+nova.getIdLinha());
        if(anterior.getIdLinha() != nova.getIdLinha()) {
            linhasNoPonto.clear();
            responseTodosOnibusNoPonto.clear();
            matrizResponsePonto.clear();
            mapaOnibusLinha.put(bus.getId(), nova);
            listaOnibus.get(anterior.getIdLinha()).remove(bus);
            listaOnibus.get(nova.getIdLinha()).add(bus);
            bus.setLinha(nova);
            System.out.println("ta aqui1");
            configurarPontos();
            System.out.println("ta aqui5");
        }        
    }
    
    public void atualizarTemposSistema() {
        Iterator<Bus> iteradorOnibus = mapaOnibus.values().iterator();
        for (Bus onibus : mapaOnibus.values()) {
            onibus.atualizarCrowdness();
        }
        
        Iterator<HashMap<Integer, ArrayList<ResponsePonto>>> iteradorPontos = matrizResponsePonto.values().iterator();
        
        for (Entry<Integer, ArrayList<ResponsePonto >>(iteradorPontos.hasNext()) {            
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = iteradorPontos.next();
            Iterator<ArrayList<ResponsePonto>> iteradorLinhas = mapa.values().iterator();    

            while(iteradorLinhas.hasNext()) {                
                ArrayList<ResponsePonto> listaMatriz = iteradorLinhas.next();
                Iterator<ResponsePonto> iteradorResponse = listaMatriz.iterator();
                while(iteradorResponse.hasNext()) {
                    ResponsePonto resp = iteradorResponse.next();
                    resp.atualizar();
                }
                Collections.sort(listaMatriz);
            }            
        }
        
        Iterator<ArrayList<ResponsePonto>> iteradorLinhas2 = responseTodosOnibusNoPonto.values().iterator();
        while(iteradorLinhas2.hasNext()) {
            ArrayList<ResponsePonto> lista = iteradorLinhas2.next();
            Collections.sort(lista);
        }
        
        
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/bus/{id}/linha")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Linha getLinhaBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibusLinha.get(id);
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/todas_linhas")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public LinhaList getLinhaBusById()
    {
        return new LinhaList(linhasOrdenadas);
    }
    
    @GET    // retorna o onibus {id}
    @Path("/bus/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Bus getPosicaoBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibus.get(id);
    }
    
    @GET    // retorna todos os onibus na linha {id}
    @Path("/linha/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public BusList getOnibusNaLinha(@PathParam("id") @Valid IntParam id)
    {
        //System.out.println(listaOnibus.toString());    
        if(id.get() == 0) return new BusList(new ArrayList<Bus>(mapaOnibus.values()));
        return new BusList(listaOnibus.get(id.get()));
    }
    
    @GET    
    @Path("/ponto/{idPonto}/linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public ResponsePontoList getOnibusNoPonto(@PathParam("idPonto") @Valid IntParam varIdPonto,
                                              @PathParam("idLinha") @Valid IntParam varIdLinha)
    {
        int idPonto = varIdPonto.get();
        int idLinha = varIdLinha.get();
        Collections.sort(responseTodosOnibusNoPonto.get(idPonto));
        if(idLinha == 0) return new ResponsePontoList(responseTodosOnibusNoPonto.get(idPonto));
        return new ResponsePontoList(matrizResponsePonto.get(idPonto).get(idLinha));
    }
    
    @GET    
    @Path("/crowd/{idBus}/{value}")    
    @Consumes(MediaType.APPLICATION_JSON)
    public void teste(@PathParam("idBus") @Valid IntParam idBus,
            @PathParam("value") @Valid IntParam value) {
        
        int crowd = value.get();
        int idOnibus = idBus.get();
        if(crowd >= 1 && crowd <= 5) {
            if(mapaOnibus.containsKey(idOnibus)) {
                Bus bus = mapaOnibus.get(idOnibus);
                bus.adicionarCrowdness(crowd);
            }
        }

    }
    
//    @GET    
//    @Path("/pontos/{id}")    
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public PontoList getPontosNaLinha(@PathParam("id") @Valid IntParam id)
//    {
//        System.out.println(listaOnibus.toString());
//        ArrayList<Bus> list = new ArrayList<Bus>();
//        System.out.println("\n"+listaOnibus.containsKey(id)+" id = "+id.get()+"\n");
//        if(listaOnibus.containsKey(id.get())) {
//            list = listaOnibus.get(id.get()); 
//            System.out.println(list);
//        }        
//        return new BusList(list);
//    }
    
    @GET    
    @Path("/pontos_linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public PontoList getPontos(@PathParam("idLinha") @Valid IntParam varIdLinha)
    {     
        int idLinha = varIdLinha.get();
        if(idLinha == 0) return new PontoList(new ArrayList<Ponto>(listaPontos.values()));
        return new PontoList(mapaLinha.get(idLinha).pegarPontosNaLinha());
    }
    
    
    @GET
    @Path("/setargps/{id}/{latitude}/{longitude}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setBusPosition(
            @PathParam("id") @Valid IntParam id,
            @PathParam("latitude")  @Valid Double  latitude, 
            @PathParam("longitude")  @Valid Double longitude) {
        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
        try {
            checkNotNull(latitude);
            checkNotNull(longitude);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        mapaOnibus.get(id.get()).setPosicaoAtual(latitude,longitude);
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
    @GET
    @Path("/setarlinha/{idBus}/{idLinha}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setLinhaBus(
            @PathParam("idBus") @Valid IntParam idBus,
            @PathParam("idLinha")  @Valid IntParam  idLinha) {

        try {
            checkNotNull(idBus);
            checkNotNull(idLinha);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        if(mapaLinha.containsKey(idLinha.get())) {
            Linha l = mapaLinha.get(idLinha.get());
            if(mapaOnibus.containsKey(idBus.get())) {
                Bus b = mapaOnibus.get(idBus.get());            
                alterarLinhaOnibus(b, l);
            }
            else {
                Bus b = new Bus(idBus.get(), l);
                adicionarBus(b);
                linhasNoPonto.clear();
                responseTodosOnibusNoPonto.clear();
                matrizResponsePonto.clear();
                configurarPontos();
            }
        }
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
//    @POST
//    @Path("/{id}")
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public Response setBusPositionPost(
//            @PathParam("id") @Valid IntParam id,
//            @FormParam("latitude")  @Valid Double  latitude, 
//            @FormParam("longitude")  @Valid Double longitude) {
//        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
//        try {
//            checkNotNull(latitude);
//            checkNotNull(longitude);
//        } catch(Exception e) {
//            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
//        }      
//        
//        onibus.setPosicaoAtual(latitude,longitude);
//        
//        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();
//       
//    }

    

    
        
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-29 16:46:58.562
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-29 16:46:58.562
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-29 16:46:59.605
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package core;


import static com.google.common.base.Preconditions.checkNotNull;
import io.dropwizard.jersey.params.IntParam;

import java.net.HttpURLConnection;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;

import javax.validation.Valid;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;

import Response.BusList;
import Response.LinhaList;
import Response.PontoList;
import Response.ResponsePonto;
import Response.ResponsePontoList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Felipe Cousin
 */
@Path("/get")
public class ConfigResource {
    
    private HashMap<Integer, Bus> mapaOnibus = new HashMap<Integer, Bus>(); // chave é o id do onibus, e o onibus
    private HashMap<Integer, Linha> mapaOnibusLinha = new HashMap<Integer, Linha>(); // chave é o id do onibus, e a sua linha
    private HashMap<Integer, Linha> mapaLinha = new HashMap<Integer, Linha>(); // chave é o id da linha, e a linha       
    private HashMap<Integer, ArrayList<Bus>> listaOnibus = new HashMap<Integer, ArrayList<Bus>>(); // chave é id da linha, arraylist de todos onibus na linha
    private HashMap<Integer, ArrayList<Linha>> linhasNoPonto = new HashMap<Integer, ArrayList<Linha>>(); // chave é id do ponto, arraylist de todas as linhas que passam por ele
    //private HashMap<Integer, ArrayList<Bus>> onibusNoPonto = new HashMap<Integer, ArrayList<Bus>>(); // chave é id do ponto, arraylist de todos os pontos que passam por ele
    private HashMap<Integer, ArrayList<ResponsePonto>> responseTodosOnibusNoPonto = new HashMap<Integer, ArrayList<ResponsePonto>>(); // chave é id do ponto, arraylist de todos as respostas de onibus que passam por ele
    private HashMap<Integer, Ponto> listaPontos = new HashMap<Integer, Ponto>();
    private ArrayList<Linha> linhasOrdenadas = new ArrayList<Linha>();
    private HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>> matrizResponsePonto = new HashMap<Integer, HashMap<Integer, ArrayList<ResponsePonto>>>();
    
    public ConfigResource() {
        
    }

    public void adicionarBus(Bus onibus) {
        Linha linha = onibus.pegarLinha();
        mapaOnibus.put(onibus.getId(), onibus);
        mapaOnibusLinha.put(onibus.getId(), linha);
        if(listaOnibus.containsKey(linha.getIdLinha())) listaOnibus.get(linha.getIdLinha()).add(onibus);
        else {
            ArrayList<Bus> list = new ArrayList<Bus>();
            list.add(onibus);
            listaOnibus.put(linha.getIdLinha(), list);
        }
        if(!mapaLinha.containsKey(linha.getIdLinha())) { 
            linhasOrdenadas.add(linha);
            Collections.sort(linhasOrdenadas);
            mapaLinha.put(linha.getIdLinha(), linha);
        }            
    }
    
    public void adicionarPonto(Ponto ponto) {
        if(!listaPontos.containsKey(ponto.getId()) && ponto.isPontoDeOnibus()) listaPontos.put(ponto.getId(), ponto);        
    }
    
    public void configurarPontos() {
        Iterator<Ponto> iteradorPontos = listaPontos.values().iterator();
        Date inicio = Calendar.getInstance().getTime();
        while(iteradorPontos.hasNext()) {            
            Ponto ponto = (Ponto) iteradorPontos.next();
            Iterator<Linha> iteradorLinhas = mapaLinha.values().iterator();
            ArrayList<Linha> listaLinhas = new ArrayList<Linha>();
            ArrayList<Bus> listaBuses = new ArrayList<Bus>();
            ArrayList<ResponsePonto> listaResponse = new ArrayList<ResponsePonto>();
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = new HashMap<Integer, ArrayList<ResponsePonto>>();            

            while(iteradorLinhas.hasNext()) {
                Linha linha = iteradorLinhas.next();
                ArrayList<ResponsePonto> listaMatriz = new ArrayList<ResponsePonto>();
                if(linha.pontoOnibusEstaNaLinha(ponto)) {
                    listaLinhas.add(linha);
                    Iterator<Bus> iteradorOnibus = listaOnibus.get(linha.getIdLinha()).iterator();
                    while(iteradorOnibus.hasNext()) {
                        Bus b = iteradorOnibus.next();
                        listaBuses.add(b);
                        ResponsePonto resp = new ResponsePonto(ponto, linha, b);
                        listaResponse.add(resp);
                        listaMatriz.add(resp);
                    }
                    Collections.sort(listaMatriz);
                    mapa.put(linha.getIdLinha(), listaMatriz);
                }
            }
            
            linhasNoPonto.put(ponto.getId(), listaLinhas);
            //onibusNoPonto.put(ponto.getId(), listaBuses);
            responseTodosOnibusNoPonto.put(ponto.getId(), listaResponse);
            matrizResponsePonto.put(ponto.getId(), mapa);
            
        }
        
        Date termino = Calendar.getInstance().getTime();
        System.out.println("tempo = "+(termino.getTime() - inicio.getTime()));
        
    }
    
    private void alterarLinhaOnibus(Bus bus, Linha nova) {
        Linha anterior = bus.pegarLinha();
        System.out.println("anterior = "+anterior.getIdLinha()+", nova = "+nova.getIdLinha());
        if(anterior.getIdLinha() != nova.getIdLinha()) {
            linhasNoPonto.clear();
            responseTodosOnibusNoPonto.clear();
            matrizResponsePonto.clear();
            mapaOnibusLinha.put(bus.getId(), nova);
            listaOnibus.get(anterior.getIdLinha()).remove(bus);
            listaOnibus.get(nova.getIdLinha()).add(bus);
            bus.setLinha(nova);
            System.out.println("ta aqui1");
            configurarPontos();
            System.out.println("ta aqui5");
        }        
    }
    
    public void atualizarTemposSistema() {
        Iterator<Bus> iteradorOnibus = mapaOnibus.values().iterator();
        for (Bus onibus : mapaOnibus.values()) {
            onibus.atualizarCrowdness();
        }
        
        Iterator<HashMap<Integer, ArrayList<ResponsePonto>>> iteradorPontos = matrizResponsePonto.values().iterator();
        
        for (Entry<Integer, ArrayList<ResponsePonto>>(iteradorPontos.hasNext()) {            
            HashMap<Integer, ArrayList<ResponsePonto>> mapa = iteradorPontos.next();
            Iterator<ArrayList<ResponsePonto>> iteradorLinhas = mapa.values().iterator();    

            while(iteradorLinhas.hasNext()) {                
                ArrayList<ResponsePonto> listaMatriz = iteradorLinhas.next();
                Iterator<ResponsePonto> iteradorResponse = listaMatriz.iterator();
                while(iteradorResponse.hasNext()) {
                    ResponsePonto resp = iteradorResponse.next();
                    resp.atualizar();
                }
                Collections.sort(listaMatriz);
            }            
        }
        
        Iterator<ArrayList<ResponsePonto>> iteradorLinhas2 = responseTodosOnibusNoPonto.values().iterator();
        while(iteradorLinhas2.hasNext()) {
            ArrayList<ResponsePonto> lista = iteradorLinhas2.next();
            Collections.sort(lista);
        }
        
        
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/bus/{id}/linha")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Linha getLinhaBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibusLinha.get(id);
    }
    
    @GET    // retorna a linha do onibus {id}
    @Path("/todas_linhas")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public LinhaList getLinhaBusById()
    {
        return new LinhaList(linhasOrdenadas);
    }
    
    @GET    // retorna o onibus {id}
    @Path("/bus/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Bus getPosicaoBusById(@PathParam("id") @Valid IntParam id)
    {
        return mapaOnibus.get(id);
    }
    
    @GET    // retorna todos os onibus na linha {id}
    @Path("/linha/{id}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public BusList getOnibusNaLinha(@PathParam("id") @Valid IntParam id)
    {
        //System.out.println(listaOnibus.toString());    
        if(id.get() == 0) return new BusList(new ArrayList<Bus>(mapaOnibus.values()));
        return new BusList(listaOnibus.get(id.get()));
    }
    
    @GET    
    @Path("/ponto/{idPonto}/linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public ResponsePontoList getOnibusNoPonto(@PathParam("idPonto") @Valid IntParam varIdPonto,
                                              @PathParam("idLinha") @Valid IntParam varIdLinha)
    {
        int idPonto = varIdPonto.get();
        int idLinha = varIdLinha.get();
        Collections.sort(responseTodosOnibusNoPonto.get(idPonto));
        if(idLinha == 0) return new ResponsePontoList(responseTodosOnibusNoPonto.get(idPonto));
        return new ResponsePontoList(matrizResponsePonto.get(idPonto).get(idLinha));
    }
    
    @GET    
    @Path("/crowd/{idBus}/{value}")    
    @Consumes(MediaType.APPLICATION_JSON)
    public void teste(@PathParam("idBus") @Valid IntParam idBus,
            @PathParam("value") @Valid IntParam value) {
        
        int crowd = value.get();
        int idOnibus = idBus.get();
        if(crowd >= 1 && crowd <= 5) {
            if(mapaOnibus.containsKey(idOnibus)) {
                Bus bus = mapaOnibus.get(idOnibus);
                bus.adicionarCrowdness(crowd);
            }
        }

    }
    
//    @GET    
//    @Path("/pontos/{id}")    
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public PontoList getPontosNaLinha(@PathParam("id") @Valid IntParam id)
//    {
//        System.out.println(listaOnibus.toString());
//        ArrayList<Bus> list = new ArrayList<Bus>();
//        System.out.println("\n"+listaOnibus.containsKey(id)+" id = "+id.get()+"\n");
//        if(listaOnibus.containsKey(id.get())) {
//            list = listaOnibus.get(id.get()); 
//            System.out.println(list);
//        }        
//        return new BusList(list);
//    }
    
    @GET    
    @Path("/pontos_linha/{idLinha}")    
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public PontoList getPontos(@PathParam("idLinha") @Valid IntParam varIdLinha)
    {     
        int idLinha = varIdLinha.get();
        if(idLinha == 0) return new PontoList(new ArrayList<Ponto>(listaPontos.values()));
        return new PontoList(mapaLinha.get(idLinha).pegarPontosNaLinha());
    }
    
    
    @GET
    @Path("/setargps/{id}/{latitude}/{longitude}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setBusPosition(
            @PathParam("id") @Valid IntParam id,
            @PathParam("latitude")  @Valid Double  latitude, 
            @PathParam("longitude")  @Valid Double longitude) {
        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
        try {
            checkNotNull(latitude);
            checkNotNull(longitude);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        mapaOnibus.get(id.get()).setPosicaoAtual(latitude,longitude);
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
    @GET
    @Path("/setarlinha/{idBus}/{idLinha}")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response setLinhaBus(
            @PathParam("idBus") @Valid IntParam idBus,
            @PathParam("idLinha")  @Valid IntParam  idLinha) {

        try {
            checkNotNull(idBus);
            checkNotNull(idLinha);
        } catch(Exception e) {
            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
        }      
        
        if(mapaLinha.containsKey(idLinha.get())) {
            Linha l = mapaLinha.get(idLinha.get());
            if(mapaOnibus.containsKey(idBus.get())) {
                Bus b = mapaOnibus.get(idBus.get());            
                alterarLinhaOnibus(b, l);
            }
            else {
                Bus b = new Bus(idBus.get(), l);
                adicionarBus(b);
                linhasNoPonto.clear();
                responseTodosOnibusNoPonto.clear();
                matrizResponsePonto.clear();
                configurarPontos();
            }
        }
        
        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();       
    }
    
//    @POST
//    @Path("/{id}")
//    @Consumes(MediaType.APPLICATION_JSON)
//    @Produces(MediaType.APPLICATION_JSON)
//    public Response setBusPositionPost(
//            @PathParam("id") @Valid IntParam id,
//            @FormParam("latitude")  @Valid Double  latitude, 
//            @FormParam("longitude")  @Valid Double longitude) {
//        System.out.println("latitude = "+latitude+" e longitude = "+longitude);
//        try {
//            checkNotNull(latitude);
//            checkNotNull(longitude);
//        } catch(Exception e) {
//            throw new WebApplicationException(Response.status(HttpURLConnection.HTTP_BAD_REQUEST).entity("parameters are mandatory").build());
//        }      
//        
//        onibus.setPosicaoAtual(latitude,longitude);
//        
//        return Response.created(UriBuilder.fromResource(BusResource.class).build()).build();
//       
//    }

    

    
        
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-29 16:46:59.605
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-29 16:46:59.606
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1780)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3231)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1683)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1090)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1714)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2751)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1886)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2671)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:635)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:195)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2958)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1374)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:202)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:557)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.ui 4 4 2014-11-29 16:50:27.969
!MESSAGE Plug-in 'org.eclipse.pde.ui' contributed an invalid Menu Extension (Path: 'org.eclipse.ui.projectConfigure' is invalid): org.eclipse.pde.ui.ConvertedProjectWizard

!ENTRY org.eclipse.ui 4 4 2014-11-29 16:50:27.970
!MESSAGE Plug-in 'org.eclipse.wst.jsdt.ui' contributed an invalid Menu Extension (Path: 'org.eclipse.ui.projectConfigure' is invalid): org.eclipse.wst.jsdt.internal.web.ui.convertProjects
!SESSION 2014-11-30 08:56:26.453 -----------------------------------------------
eclipse.buildId=4.4.0.I20140606-1215
java.version=1.7.0_51
java.vendor=Oracle Corporation
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=pt_BR

!ENTRY org.eclipse.osgi 4 0 2014-11-30 08:56:29.178
!MESSAGE error loading hook: org.eclipse.equinox.weaving.hooks.WeavingHook
!STACK 0
java.lang.NoClassDefFoundError: org/eclipse/osgi/baseadaptor/HookConfigurator
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:190)
	at org.eclipse.osgi.internal.hookregistry.HookRegistry.loadConfigurators(HookRegistry.java:185)
	at org.eclipse.osgi.internal.hookregistry.HookRegistry.initialize(HookRegistry.java:106)
	at org.eclipse.osgi.internal.framework.EquinoxContainer.<init>(EquinoxContainer.java:73)
	at org.eclipse.osgi.launch.Equinox.<init>(Equinox.java:31)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:297)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:232)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:648)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:603)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1465)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1438)
Caused by: java.lang.ClassNotFoundException: org.eclipse.osgi.baseadaptor.HookConfigurator
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 38 more

!ENTRY org.scala-ide.sdt.core 4 0 2014-11-30 08:56:43.009
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.scala-ide.sdt.core [882]
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.scala-ide.sdt.core [osgi.identity; osgi.identity="org.scala-ide.sdt.core"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"] because it is exposed to package 'javax.xml.bind' from resources org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"] and javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"] via two dependency chains.

Chain 1:
  org.scala-ide.sdt.core [osgi.identity; osgi.identity="org.scala-ide.sdt.core"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (osgi.wiring.bundle=org.eclipse.core.runtime)
     |
    provide: osgi.wiring.bundle: org.eclipse.core.runtime
  org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"]

Chain 2:
  org.scala-ide.sdt.core [osgi.identity; osgi.identity="org.scala-ide.sdt.core"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.scala-ide.sbt.full.library)(&(bundle-version>=0.13.0)(!(bundle-version>=0.14.0))))
     |
    provide: osgi.wiring.bundle; osgi.wiring.bundle="org.scala-ide.sbt.full.library"; bundle-version:Version="0.13.2.v-2_11-20140723-2242"
  org.scala-ide.sbt.full.library [osgi.identity; osgi.identity="org.scala-ide.sbt.full.library"; type="osgi.bundle"; version:Version="0.13.2.v-2_11-20140723-2242"]
    import: (osgi.wiring.package=javax.xml.bind)
     |
    export: osgi.wiring.package: javax.xml.bind
  javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.scala-ide.sdt.debug 4 0 2014-11-30 08:56:43.183
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.scala-ide.sdt.debug [883]
  Unresolved requirement: Require-Bundle: org.scala-ide.equinox-weaving-launcher; bundle-version="[1.1.0,2.0.0)"; resolution:="optional"
  Unresolved requirement: Require-Bundle: org.scala-ide.sdt.core
    -> Bundle-SymbolicName: org.scala-ide.sdt.core; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"
       org.scala-ide.sdt.core [882]
         No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.scala-ide.sdt.debug [osgi.identity; osgi.identity="org.scala-ide.sdt.debug"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"] because it is exposed to package 'javax.xml.bind' from resources org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"] and javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"] via two dependency chains.

Chain 1:
  org.scala-ide.sdt.debug [osgi.identity; osgi.identity="org.scala-ide.sdt.debug"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (osgi.wiring.bundle=org.eclipse.core.runtime)
     |
    provide: osgi.wiring.bundle: org.eclipse.core.runtime
  org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"]

Chain 2:
  org.scala-ide.sdt.debug [osgi.identity; osgi.identity="org.scala-ide.sdt.debug"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.scala-ide.sbt.full.library)(&(bundle-version>=0.13.0)(!(bundle-version>=0.14.0))))
     |
    provide: osgi.wiring.bundle; osgi.wiring.bundle="org.scala-ide.sbt.full.library"; bundle-version:Version="0.13.2.v-2_11-20140723-2242"
  org.scala-ide.sbt.full.library [osgi.identity; osgi.identity="org.scala-ide.sbt.full.library"; type="osgi.bundle"; version:Version="0.13.2.v-2_11-20140723-2242"]
    import: (osgi.wiring.package=javax.xml.bind)
     |
    export: osgi.wiring.package: javax.xml.bind
  javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.scalaide.worksheet 4 0 2014-11-30 08:56:43.523
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.scalaide.worksheet [891]
  Unresolved requirement: Require-Bundle: org.scala-ide.sdt.core; bundle-version="[3.0.4.v-2_11-201407232043-c46f499,3.0.4.v-2_11-201407232043-c46f499]"
    -> Bundle-SymbolicName: org.scala-ide.sdt.core; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"
       org.scala-ide.sdt.core [882]
         No resolution report for the bundle.  Unresolved requirement: Import-Package: scala.tools.eclipse; apply-aspects:="false"
    -> Export-Package: scala.tools.eclipse; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; bundle-symbolic-name="org.scala-ide.sdt.core"; version="0.0.0"
  Unresolved requirement: Import-Package: scala.tools.eclipse.semantichighlighting
    -> Export-Package: scala.tools.eclipse.semantichighlighting; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; bundle-symbolic-name="org.scala-ide.sdt.core"; version="0.0.0"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.scalaide.worksheet [osgi.identity; osgi.identity="org.scalaide.worksheet"; type="osgi.bundle"; version:Version="0.2.3.v-2_11-201407232049-4f7988d"; singleton:="true"] because it is exposed to package 'javax.xml.bind' from resources org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"] and javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"] via two dependency chains.

Chain 1:
  org.scalaide.worksheet [osgi.identity; osgi.identity="org.scalaide.worksheet"; type="osgi.bundle"; version:Version="0.2.3.v-2_11-201407232049-4f7988d"; singleton:="true"]
    require: (osgi.wiring.bundle=org.eclipse.core.runtime)
     |
    provide: osgi.wiring.bundle: org.eclipse.core.runtime
  org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"]

Chain 2:
  org.scalaide.worksheet [osgi.identity; osgi.identity="org.scalaide.worksheet"; type="osgi.bundle"; version:Version="0.2.3.v-2_11-201407232049-4f7988d"; singleton:="true"]
    require: (osgi.wiring.bundle=org.scala-ide.sbt.full.library)
     |
    provide: osgi.wiring.bundle; osgi.wiring.bundle="org.scala-ide.sbt.full.library"; bundle-version:Version="0.13.2.v-2_11-20140723-2242"
  org.scala-ide.sbt.full.library [osgi.identity; osgi.identity="org.scala-ide.sbt.full.library"; type="osgi.bundle"; version:Version="0.13.2.v-2_11-20140723-2242"]
    import: (osgi.wiring.package=javax.xml.bind)
     |
    export: osgi.wiring.package: javax.xml.bind
  javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.jface 2 0 2014-11-30 08:57:31.151
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-30 08:57:31.151
!MESSAGE A conflict occurred for ALT+CTRL+P:
Binding(ALT+CTRL+P,
	ParameterizedCommand(Command(org.eclipse.m2e.profiles.ui.commands.selectMavenProfileCommand,Select Maven Profiles,
		,
		Category(org.eclipse.ui.category.window,Window,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@39b70183,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+CTRL+P,
	ParameterizedCommand(Command(org.eclipse.team.svn.ui.command.CreatePatchCommand,Create Patch...,
		,
		Category(org.eclipse.team.svn.ui.command.category,SVN,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1dc45d0f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.jface 2 0 2014-11-30 11:42:16.404
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-30 11:42:16.404
!MESSAGE A conflict occurred for CTRL+I:
Binding(CTRL+I,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.indent,Correct Indentation,
		Corrects the indentation of the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@115f6413,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+I,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.format.active.elements,Format Active Elements,
		Format active elements,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1f27c9fa,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-30 11:42:16.404
!MESSAGE A conflict occurred for CTRL+SHIFT+F:
Binding(CTRL+SHIFT+F,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.format,Format,
		Format the selected text,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@da3244e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+SHIFT+F,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.format.document,Format,
		Format selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@77aed99b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-30 11:42:16.404
!MESSAGE A conflict occurred for ALT+SHIFT+ARROW_UP:
Binding(ALT+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.enclosing,Select Enclosing Element,
		Expand selection to include enclosing element,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@51a483e0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(ALT+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.enclosing,Select Enclosing Element,
		Expand selection to include enclosing element,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@33c13d3e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-30 11:42:16.404
!MESSAGE A conflict occurred for CTRL+SHIFT+/:
Binding(CTRL+SHIFT+/,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.add.block.comment,Add Block Comment,
		Enclose the selection with a block comment,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7ce1100,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+SHIFT+/,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.add.block.comment,Add Block Comment,
		Add Block Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@75f06a5e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-30 11:42:16.404
!MESSAGE A conflict occurred for CTRL+O:
Binding(CTRL+O,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.show.outline,Quick Outline,
		Show the quick outline for the editor input,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@69be1b00,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+O,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.quick_outline,Quick Outline,
		Show the quick outline for the editor input,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3fded33c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-30 11:42:16.404
!MESSAGE A conflict occurred for CTRL+SHIFT+P:
Binding(CTRL+SHIFT+P,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.goto.matching.bracket,Go to Matching Bracket,
		Moves the cursor to the matching bracket,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3dfe28e6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+SHIFT+P,
	ParameterizedCommand(Command(org.eclipse.m2e.core.ui.command.addPlugin,Add Maven Plugin,
		Add Maven Plugin,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@792f33d5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.core.runtime.xml,,,system)
Binding(CTRL+SHIFT+P,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.goto.matching.bracket,Matching Character,
		Go to Matching Character,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@520adaf0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-30 11:42:16.404
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_UP:
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.goto.previous.member,Go to Previous Member,
		Move the caret to the previous member of the compilation unit,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@9f4231b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.wst.xml.ui.previousSibling,Previous Sibling,
		Go to Previous Sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@77570a06,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-30 11:42:16.404
!MESSAGE A conflict occurred for ALT+SHIFT+ARROW_DOWN:
Binding(ALT+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.last,Restore Last Selection,
		Restore last selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7b2cc6b7,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(ALT+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.last,Restore Last Selection,
		Restore last selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@da1f0a1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-30 11:42:16.404
!MESSAGE A conflict occurred for CTRL+SHIFT+C:
Binding(CTRL+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.toggle.comment,Toggle Comment,
		Toggle comment the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@38aa578e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.toggle.comment,Toggle Comment,
		Toggle Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6bd5ab45,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-30 11:42:16.404
!MESSAGE A conflict occurred for ALT+SHIFT+ARROW_RIGHT:
Binding(ALT+SHIFT+ARROW_RIGHT,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.next,Select Next Element,
		Expand selection to include next sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@375a48b2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(ALT+SHIFT+ARROW_RIGHT,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.next,Select Next Element,
		Expand selection to include next sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@542c5be9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-30 11:42:16.404
!MESSAGE A conflict occurred for CTRL+SHIFT+\:
Binding(CTRL+SHIFT+\,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.remove.block.comment,Remove Block Comment,
		Remove the block comment enclosing the selection,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@85aba82,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+SHIFT+\,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.remove.block.comment,Remove Block Comment,
		Remove Block Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7f6e1928,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-30 11:42:16.404
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_DOWN:
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.goto.next.member,Go to Next Member,
		Move the caret to the next member of the compilation unit,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7c8ab116,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.wst.xml.ui.nextSibling,Next Sibling,
		Go to Next Sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5fc82bc3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-30 11:42:16.404
!MESSAGE A conflict occurred for ALT+SHIFT+ARROW_LEFT:
Binding(ALT+SHIFT+ARROW_LEFT,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.previous,Select Previous Element,
		Expand selection to include previous sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@75705b3a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(ALT+SHIFT+ARROW_LEFT,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.previous,Select Previous Element,
		Expand selection to include previous sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1b86232,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)

!ENTRY org.eclipse.jface 2 0 2014-11-30 11:58:18.804
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-30 11:58:18.804
!MESSAGE A conflict occurred for CTRL+D:
Binding(CTRL+D,
	ParameterizedCommand(Command(org.eclipse.debug.ui.commands.eof,EOF,
		Send end of file,
		Category(org.eclipse.debug.ui.category.run,Run/Debug,Run/Debug command category,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@75485bba,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.debug.ui.console,,,system)
Binding(CTRL+D,
	ParameterizedCommand(Command(org.eclipse.ui.edit.text.delete.line,Delete Line,
		Delete a line of text,
		Category(org.eclipse.ui.category.textEditor,Text Editing,Text Editing Commands,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@44c3d298,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.textEditorScope,,,system)
!SESSION 2014-11-30 14:24:09.693 -----------------------------------------------
eclipse.buildId=4.4.0.I20140606-1215
java.version=1.7.0_51
java.vendor=Oracle Corporation
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=pt_BR

!ENTRY org.eclipse.osgi 4 0 2014-11-30 14:24:11.299
!MESSAGE error loading hook: org.eclipse.equinox.weaving.hooks.WeavingHook
!STACK 0
java.lang.NoClassDefFoundError: org/eclipse/osgi/baseadaptor/HookConfigurator
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:71)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:361)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:190)
	at org.eclipse.osgi.internal.hookregistry.HookRegistry.loadConfigurators(HookRegistry.java:185)
	at org.eclipse.osgi.internal.hookregistry.HookRegistry.initialize(HookRegistry.java:106)
	at org.eclipse.osgi.internal.framework.EquinoxContainer.<init>(EquinoxContainer.java:73)
	at org.eclipse.osgi.launch.Equinox.<init>(Equinox.java:31)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.startup(EclipseStarter.java:297)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:232)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:648)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:603)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1465)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1438)
Caused by: java.lang.ClassNotFoundException: org.eclipse.osgi.baseadaptor.HookConfigurator
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 38 more

!ENTRY org.scala-ide.sdt.core 4 0 2014-11-30 14:24:15.534
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.scala-ide.sdt.core [882]
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.scala-ide.sdt.core [osgi.identity; osgi.identity="org.scala-ide.sdt.core"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"] because it is exposed to package 'javax.xml.bind' from resources org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"] and javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"] via two dependency chains.

Chain 1:
  org.scala-ide.sdt.core [osgi.identity; osgi.identity="org.scala-ide.sdt.core"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (osgi.wiring.bundle=org.eclipse.core.runtime)
     |
    provide: osgi.wiring.bundle: org.eclipse.core.runtime
  org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"]

Chain 2:
  org.scala-ide.sdt.core [osgi.identity; osgi.identity="org.scala-ide.sdt.core"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.scala-ide.sbt.full.library)(&(bundle-version>=0.13.0)(!(bundle-version>=0.14.0))))
     |
    provide: osgi.wiring.bundle; osgi.wiring.bundle="org.scala-ide.sbt.full.library"; bundle-version:Version="0.13.2.v-2_11-20140723-2242"
  org.scala-ide.sbt.full.library [osgi.identity; osgi.identity="org.scala-ide.sbt.full.library"; type="osgi.bundle"; version:Version="0.13.2.v-2_11-20140723-2242"]
    import: (osgi.wiring.package=javax.xml.bind)
     |
    export: osgi.wiring.package: javax.xml.bind
  javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.scala-ide.sdt.debug 4 0 2014-11-30 14:24:15.715
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.scala-ide.sdt.debug [883]
  Unresolved requirement: Require-Bundle: org.scala-ide.equinox-weaving-launcher; bundle-version="[1.1.0,2.0.0)"; resolution:="optional"
  Unresolved requirement: Require-Bundle: org.scala-ide.sdt.core
    -> Bundle-SymbolicName: org.scala-ide.sdt.core; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"
       org.scala-ide.sdt.core [882]
         No resolution report for the bundle.  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.scala-ide.sdt.debug [osgi.identity; osgi.identity="org.scala-ide.sdt.debug"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"] because it is exposed to package 'javax.xml.bind' from resources org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"] and javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"] via two dependency chains.

Chain 1:
  org.scala-ide.sdt.debug [osgi.identity; osgi.identity="org.scala-ide.sdt.debug"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (osgi.wiring.bundle=org.eclipse.core.runtime)
     |
    provide: osgi.wiring.bundle: org.eclipse.core.runtime
  org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"]

Chain 2:
  org.scala-ide.sdt.debug [osgi.identity; osgi.identity="org.scala-ide.sdt.debug"; type="osgi.bundle"; version:Version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"]
    require: (&(osgi.wiring.bundle=org.scala-ide.sbt.full.library)(&(bundle-version>=0.13.0)(!(bundle-version>=0.14.0))))
     |
    provide: osgi.wiring.bundle; osgi.wiring.bundle="org.scala-ide.sbt.full.library"; bundle-version:Version="0.13.2.v-2_11-20140723-2242"
  org.scala-ide.sbt.full.library [osgi.identity; osgi.identity="org.scala-ide.sbt.full.library"; type="osgi.bundle"; version:Version="0.13.2.v-2_11-20140723-2242"]
    import: (osgi.wiring.package=javax.xml.bind)
     |
    export: osgi.wiring.package: javax.xml.bind
  javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.scalaide.worksheet 4 0 2014-11-30 14:24:16.138
!MESSAGE FrameworkEvent ERROR
!STACK 0
org.osgi.framework.BundleException: Could not resolve module: org.scalaide.worksheet [891]
  Unresolved requirement: Require-Bundle: org.scala-ide.sdt.core; bundle-version="[3.0.4.v-2_11-201407232043-c46f499,3.0.4.v-2_11-201407232043-c46f499]"
    -> Bundle-SymbolicName: org.scala-ide.sdt.core; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; singleton:="true"
       org.scala-ide.sdt.core [882]
         No resolution report for the bundle.  Unresolved requirement: Import-Package: scala.tools.eclipse.semantichighlighting
    -> Export-Package: scala.tools.eclipse.semantichighlighting; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; bundle-symbolic-name="org.scala-ide.sdt.core"; version="0.0.0"
  Unresolved requirement: Import-Package: scala.tools.eclipse; apply-aspects:="false"
    -> Export-Package: scala.tools.eclipse; bundle-version="3.0.4.v-2_11-201407232043-c46f499"; bundle-symbolic-name="org.scala-ide.sdt.core"; version="0.0.0"
  Bundle was not resolved because of a uses contraint violation.
  org.osgi.service.resolver.ResolutionException: Uses constraint violation. Unable to resolve resource org.scalaide.worksheet [osgi.identity; osgi.identity="org.scalaide.worksheet"; type="osgi.bundle"; version:Version="0.2.3.v-2_11-201407232049-4f7988d"; singleton:="true"] because it is exposed to package 'javax.xml.bind' from resources org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"] and javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"] via two dependency chains.

Chain 1:
  org.scalaide.worksheet [osgi.identity; osgi.identity="org.scalaide.worksheet"; type="osgi.bundle"; version:Version="0.2.3.v-2_11-201407232049-4f7988d"; singleton:="true"]
    require: (osgi.wiring.bundle=org.eclipse.core.runtime)
     |
    provide: osgi.wiring.bundle: org.eclipse.core.runtime
  org.eclipse.osgi [osgi.identity; osgi.identity="org.eclipse.osgi"; type="osgi.bundle"; version:Version="3.10.0.v20140606-1445"; singleton:="true"]

Chain 2:
  org.scalaide.worksheet [osgi.identity; osgi.identity="org.scalaide.worksheet"; type="osgi.bundle"; version:Version="0.2.3.v-2_11-201407232049-4f7988d"; singleton:="true"]
    require: (osgi.wiring.bundle=org.scala-ide.sbt.full.library)
     |
    provide: osgi.wiring.bundle; osgi.wiring.bundle="org.scala-ide.sbt.full.library"; bundle-version:Version="0.13.2.v-2_11-20140723-2242"
  org.scala-ide.sbt.full.library [osgi.identity; osgi.identity="org.scala-ide.sbt.full.library"; type="osgi.bundle"; version:Version="0.13.2.v-2_11-20140723-2242"]
    import: (osgi.wiring.package=javax.xml.bind)
     |
    export: osgi.wiring.package: javax.xml.bind
  javax.xml.bind [osgi.identity; osgi.identity="javax.xml.bind"; type="osgi.bundle"; version:Version="2.1.9.v201005080401"]
	at org.eclipse.osgi.container.Module.start(Module.java:434)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1582)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1561)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1533)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1476)
	at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:340)

!ENTRY org.eclipse.jface 2 0 2014-11-30 14:25:14.842
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-30 14:25:14.842
!MESSAGE A conflict occurred for ALT+CTRL+P:
Binding(ALT+CTRL+P,
	ParameterizedCommand(Command(org.eclipse.m2e.profiles.ui.commands.selectMavenProfileCommand,Select Maven Profiles,
		,
		Category(org.eclipse.ui.category.window,Window,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4e94f1a2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+CTRL+P,
	ParameterizedCommand(Command(org.eclipse.team.svn.ui.command.CreatePatchCommand,Create Patch...,
		,
		Category(org.eclipse.team.svn.ui.command.category,SVN,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1483eafc,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.jface 2 0 2014-11-30 16:00:42.317
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-30 16:00:42.317
!MESSAGE A conflict occurred for CTRL+D:
Binding(CTRL+D,
	ParameterizedCommand(Command(org.eclipse.debug.ui.commands.eof,EOF,
		Send end of file,
		Category(org.eclipse.debug.ui.category.run,Run/Debug,Run/Debug command category,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@19b3b1bd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.debug.ui.console,,,system)
Binding(CTRL+D,
	ParameterizedCommand(Command(org.eclipse.ui.edit.text.delete.line,Delete Line,
		Delete a line of text,
		Category(org.eclipse.ui.category.textEditor,Text Editing,Text Editing Commands,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@58f6b214,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.textEditorScope,,,system)
